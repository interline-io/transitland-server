// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: checker.proto

package azpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_empty_action            Action = 0
	Action_can_view                Action = 1
	Action_can_edit                Action = 2
	Action_can_edit_members        Action = 3
	Action_can_create_org          Action = 4
	Action_can_delete_org          Action = 5
	Action_can_create_feed_version Action = 6
	Action_can_delete_feed_version Action = 7
	Action_can_create_feed         Action = 8
	Action_can_delete_feed         Action = 9
	Action_can_set_group           Action = 10
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0:  "empty_action",
		1:  "can_view",
		2:  "can_edit",
		3:  "can_edit_members",
		4:  "can_create_org",
		5:  "can_delete_org",
		6:  "can_create_feed_version",
		7:  "can_delete_feed_version",
		8:  "can_create_feed",
		9:  "can_delete_feed",
		10: "can_set_group",
	}
	Action_value = map[string]int32{
		"empty_action":            0,
		"can_view":                1,
		"can_edit":                2,
		"can_edit_members":        3,
		"can_create_org":          4,
		"can_delete_org":          5,
		"can_create_feed_version": 6,
		"can_delete_feed_version": 7,
		"can_create_feed":         8,
		"can_delete_feed":         9,
		"can_set_group":           10,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_checker_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_checker_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{0}
}

type ObjectType int32

const (
	ObjectType_empty_object ObjectType = 0
	ObjectType_tenant       ObjectType = 1
	ObjectType_org          ObjectType = 2
	ObjectType_feed         ObjectType = 3
	ObjectType_feed_version ObjectType = 4
	ObjectType_user         ObjectType = 5
)

// Enum value maps for ObjectType.
var (
	ObjectType_name = map[int32]string{
		0: "empty_object",
		1: "tenant",
		2: "org",
		3: "feed",
		4: "feed_version",
		5: "user",
	}
	ObjectType_value = map[string]int32{
		"empty_object": 0,
		"tenant":       1,
		"org":          2,
		"feed":         3,
		"feed_version": 4,
		"user":         5,
	}
)

func (x ObjectType) Enum() *ObjectType {
	p := new(ObjectType)
	*p = x
	return p
}

func (x ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_checker_proto_enumTypes[1].Descriptor()
}

func (ObjectType) Type() protoreflect.EnumType {
	return &file_checker_proto_enumTypes[1]
}

func (x ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectType.Descriptor instead.
func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{1}
}

type Relation int32

const (
	Relation_empty_relation Relation = 0
	Relation_admin          Relation = 1
	Relation_member         Relation = 2
	Relation_manager        Relation = 3
	Relation_viewer         Relation = 4
	Relation_editor         Relation = 5
	Relation_parent         Relation = 6
)

// Enum value maps for Relation.
var (
	Relation_name = map[int32]string{
		0: "empty_relation",
		1: "admin",
		2: "member",
		3: "manager",
		4: "viewer",
		5: "editor",
		6: "parent",
	}
	Relation_value = map[string]int32{
		"empty_relation": 0,
		"admin":          1,
		"member":         2,
		"manager":        3,
		"viewer":         4,
		"editor":         5,
		"parent":         6,
	}
)

func (x Relation) Enum() *Relation {
	p := new(Relation)
	*p = x
	return p
}

func (x Relation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Relation) Descriptor() protoreflect.EnumDescriptor {
	return file_checker_proto_enumTypes[2].Descriptor()
}

func (Relation) Type() protoreflect.EnumType {
	return &file_checker_proto_enumTypes[2]
}

func (x Relation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Relation.Descriptor instead.
func (Relation) EnumDescriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{2}
}

type UserRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     ObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=azpb.ObjectType" json:"type,omitempty"`
	Relation Relation   `protobuf:"varint,2,opt,name=relation,proto3,enum=azpb.Relation" json:"relation,omitempty"`
	UserId   string     `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UserRelation) Reset() {
	*x = UserRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelation) ProtoMessage() {}

func (x *UserRelation) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelation.ProtoReflect.Descriptor instead.
func (*UserRelation) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{0}
}

func (x *UserRelation) GetType() ObjectType {
	if x != nil {
		return x.Type
	}
	return ObjectType_empty_object
}

func (x *UserRelation) GetRelation() Relation {
	if x != nil {
		return x.Relation
	}
	return Relation_empty_relation
}

func (x *UserRelation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *UserListRequest) Reset() {
	*x = UserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListRequest) ProtoMessage() {}

func (x *UserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListRequest.ProtoReflect.Descriptor instead.
func (*UserListRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{2}
}

func (x *UserListRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{3}
}

func (x *UserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{4}
}

func (x *UserListResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{5}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Tenant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{6}
}

func (x *Tenant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tenant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type TenantSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantSaveRequest) Reset() {
	*x = TenantSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantSaveRequest) ProtoMessage() {}

func (x *TenantSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantSaveRequest.ProtoReflect.Descriptor instead.
func (*TenantSaveRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{7}
}

func (x *TenantSaveRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type TenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TenantRequest) Reset() {
	*x = TenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantRequest) ProtoMessage() {}

func (x *TenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantRequest.ProtoReflect.Descriptor instead.
func (*TenantRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{8}
}

func (x *TenantRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TenantListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantListRequest) Reset() {
	*x = TenantListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantListRequest) ProtoMessage() {}

func (x *TenantListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantListRequest.ProtoReflect.Descriptor instead.
func (*TenantListRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{9}
}

type TenantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *TenantResponse) Reset() {
	*x = TenantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantResponse) ProtoMessage() {}

func (x *TenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantResponse.ProtoReflect.Descriptor instead.
func (*TenantResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{10}
}

func (x *TenantResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type TenantListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenants []*Tenant `protobuf:"bytes,1,rep,name=tenants,proto3" json:"tenants,omitempty"`
}

func (x *TenantListResponse) Reset() {
	*x = TenantListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantListResponse) ProtoMessage() {}

func (x *TenantListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantListResponse.ProtoReflect.Descriptor instead.
func (*TenantListResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{11}
}

func (x *TenantListResponse) GetTenants() []*Tenant {
	if x != nil {
		return x.Tenants
	}
	return nil
}

type TenantPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tenant  *Tenant                            `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Groups  []*Group                           `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	Actions *TenantPermissionsResponse_Actions `protobuf:"bytes,3,opt,name=actions,proto3" json:"actions,omitempty"`
	Users   *TenantPermissionsResponse_Users   `protobuf:"bytes,4,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *TenantPermissionsResponse) Reset() {
	*x = TenantPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantPermissionsResponse) ProtoMessage() {}

func (x *TenantPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantPermissionsResponse.ProtoReflect.Descriptor instead.
func (*TenantPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{12}
}

func (x *TenantPermissionsResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *TenantPermissionsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *TenantPermissionsResponse) GetActions() *TenantPermissionsResponse_Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *TenantPermissionsResponse) GetUsers() *TenantPermissionsResponse_Users {
	if x != nil {
		return x.Users
	}
	return nil
}

type TenantCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantCreateRequest) Reset() {
	*x = TenantCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantCreateRequest) ProtoMessage() {}

func (x *TenantCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantCreateRequest.ProtoReflect.Descriptor instead.
func (*TenantCreateRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{13}
}

type TenantCreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group *Group `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *TenantCreateGroupRequest) Reset() {
	*x = TenantCreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantCreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantCreateGroupRequest) ProtoMessage() {}

func (x *TenantCreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantCreateGroupRequest.ProtoReflect.Descriptor instead.
func (*TenantCreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{14}
}

func (x *TenantCreateGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantCreateGroupRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type TenantCreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *TenantCreateGroupResponse) Reset() {
	*x = TenantCreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantCreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantCreateGroupResponse) ProtoMessage() {}

func (x *TenantCreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantCreateGroupResponse.ProtoReflect.Descriptor instead.
func (*TenantCreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{15}
}

func (x *TenantCreateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type TenantModifyPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserRelation *UserRelation `protobuf:"bytes,2,opt,name=user_relation,json=userRelation,proto3" json:"user_relation,omitempty"`
}

func (x *TenantModifyPermissionRequest) Reset() {
	*x = TenantModifyPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantModifyPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantModifyPermissionRequest) ProtoMessage() {}

func (x *TenantModifyPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantModifyPermissionRequest.ProtoReflect.Descriptor instead.
func (*TenantModifyPermissionRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{16}
}

func (x *TenantModifyPermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TenantModifyPermissionRequest) GetUserRelation() *UserRelation {
	if x != nil {
		return x.UserRelation
	}
	return nil
}

type TenantSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TenantSaveResponse) Reset() {
	*x = TenantSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantSaveResponse) ProtoMessage() {}

func (x *TenantSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantSaveResponse.ProtoReflect.Descriptor instead.
func (*TenantSaveResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{17}
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{18}
}

func (x *Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GroupRequest) Reset() {
	*x = GroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRequest) ProtoMessage() {}

func (x *GroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRequest.ProtoReflect.Descriptor instead.
func (*GroupRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{19}
}

func (x *GroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GroupSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupSaveRequest) Reset() {
	*x = GroupSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSaveRequest) ProtoMessage() {}

func (x *GroupSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSaveRequest.ProtoReflect.Descriptor instead.
func (*GroupSaveRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{20}
}

func (x *GroupSaveRequest) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupListRequest) Reset() {
	*x = GroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListRequest) ProtoMessage() {}

func (x *GroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListRequest.ProtoReflect.Descriptor instead.
func (*GroupListRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{21}
}

type GroupModifyPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserRelation *UserRelation `protobuf:"bytes,2,opt,name=user_relation,json=userRelation,proto3" json:"user_relation,omitempty"`
}

func (x *GroupModifyPermissionRequest) Reset() {
	*x = GroupModifyPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupModifyPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupModifyPermissionRequest) ProtoMessage() {}

func (x *GroupModifyPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupModifyPermissionRequest.ProtoReflect.Descriptor instead.
func (*GroupModifyPermissionRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{22}
}

func (x *GroupModifyPermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupModifyPermissionRequest) GetUserRelation() *UserRelation {
	if x != nil {
		return x.UserRelation
	}
	return nil
}

type GroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupResponse) Reset() {
	*x = GroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupResponse) ProtoMessage() {}

func (x *GroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupResponse.ProtoReflect.Descriptor instead.
func (*GroupResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{23}
}

func (x *GroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupListResponse) Reset() {
	*x = GroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListResponse) ProtoMessage() {}

func (x *GroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListResponse.ProtoReflect.Descriptor instead.
func (*GroupListResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{24}
}

func (x *GroupListResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GroupPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   *Group                            `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Tenant  *Tenant                           `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Feeds   []*Feed                           `protobuf:"bytes,3,rep,name=feeds,proto3" json:"feeds,omitempty"`
	Actions *GroupPermissionsResponse_Actions `protobuf:"bytes,4,opt,name=actions,proto3" json:"actions,omitempty"`
	Users   *GroupPermissionsResponse_Users   `protobuf:"bytes,5,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *GroupPermissionsResponse) Reset() {
	*x = GroupPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPermissionsResponse) ProtoMessage() {}

func (x *GroupPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GroupPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{25}
}

func (x *GroupPermissionsResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupPermissionsResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *GroupPermissionsResponse) GetFeeds() []*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

func (x *GroupPermissionsResponse) GetActions() *GroupPermissionsResponse_Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GroupPermissionsResponse) GetUsers() *GroupPermissionsResponse_Users {
	if x != nil {
		return x.Users
	}
	return nil
}

type GroupSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupSaveResponse) Reset() {
	*x = GroupSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSaveResponse) ProtoMessage() {}

func (x *GroupSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSaveResponse.ProtoReflect.Descriptor instead.
func (*GroupSaveResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{26}
}

func (x *GroupSaveResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OnestopId string `protobuf:"bytes,2,opt,name=onestop_id,json=onestopId,proto3" json:"onestop_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{27}
}

func (x *Feed) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Feed) GetOnestopId() string {
	if x != nil {
		return x.OnestopId
	}
	return ""
}

func (x *Feed) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{28}
}

func (x *FeedRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FeedListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedListRequest) Reset() {
	*x = FeedListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListRequest) ProtoMessage() {}

func (x *FeedListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListRequest.ProtoReflect.Descriptor instead.
func (*FeedListRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{29}
}

type FeedPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed    *Feed                            `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
	Group   *Group                           `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Actions *FeedPermissionsResponse_Actions `protobuf:"bytes,3,opt,name=actions,proto3" json:"actions,omitempty"`
}

func (x *FeedPermissionsResponse) Reset() {
	*x = FeedPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedPermissionsResponse) ProtoMessage() {}

func (x *FeedPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedPermissionsResponse.ProtoReflect.Descriptor instead.
func (*FeedPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{30}
}

func (x *FeedPermissionsResponse) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *FeedPermissionsResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *FeedPermissionsResponse) GetActions() *FeedPermissionsResponse_Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

type FeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{31}
}

func (x *FeedResponse) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

type FeedListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*Feed `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *FeedListResponse) Reset() {
	*x = FeedListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedListResponse) ProtoMessage() {}

func (x *FeedListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedListResponse.ProtoReflect.Descriptor instead.
func (*FeedListResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{32}
}

func (x *FeedListResponse) GetFeeds() []*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

type FeedSetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *FeedSetGroupRequest) Reset() {
	*x = FeedSetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedSetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedSetGroupRequest) ProtoMessage() {}

func (x *FeedSetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedSetGroupRequest.ProtoReflect.Descriptor instead.
func (*FeedSetGroupRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{33}
}

func (x *FeedSetGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedSetGroupRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type FeedSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedSaveResponse) Reset() {
	*x = FeedSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedSaveResponse) ProtoMessage() {}

func (x *FeedSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedSaveResponse.ProtoReflect.Descriptor instead.
func (*FeedSaveResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{34}
}

type FeedVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Sha1   string `protobuf:"bytes,3,opt,name=sha1,proto3" json:"sha1,omitempty"`
	FeedId int64  `protobuf:"varint,4,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *FeedVersion) Reset() {
	*x = FeedVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersion) ProtoMessage() {}

func (x *FeedVersion) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersion.ProtoReflect.Descriptor instead.
func (*FeedVersion) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{35}
}

func (x *FeedVersion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeedVersion) GetSha1() string {
	if x != nil {
		return x.Sha1
	}
	return ""
}

func (x *FeedVersion) GetFeedId() int64 {
	if x != nil {
		return x.FeedId
	}
	return 0
}

type FeedVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedVersionListRequest) Reset() {
	*x = FeedVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionListRequest) ProtoMessage() {}

func (x *FeedVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionListRequest.ProtoReflect.Descriptor instead.
func (*FeedVersionListRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{36}
}

type FeedVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedVersion *FeedVersion `protobuf:"bytes,1,opt,name=feed_version,json=feedVersion,proto3" json:"feed_version,omitempty"`
}

func (x *FeedVersionResponse) Reset() {
	*x = FeedVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionResponse) ProtoMessage() {}

func (x *FeedVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionResponse.ProtoReflect.Descriptor instead.
func (*FeedVersionResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{37}
}

func (x *FeedVersionResponse) GetFeedVersion() *FeedVersion {
	if x != nil {
		return x.FeedVersion
	}
	return nil
}

type FeedVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FeedVersionRequest) Reset() {
	*x = FeedVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionRequest) ProtoMessage() {}

func (x *FeedVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionRequest.ProtoReflect.Descriptor instead.
func (*FeedVersionRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{38}
}

func (x *FeedVersionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FeedVersionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedVersions []*FeedVersion `protobuf:"bytes,1,rep,name=feed_versions,json=feedVersions,proto3" json:"feed_versions,omitempty"`
}

func (x *FeedVersionListResponse) Reset() {
	*x = FeedVersionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionListResponse) ProtoMessage() {}

func (x *FeedVersionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionListResponse.ProtoReflect.Descriptor instead.
func (*FeedVersionListResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{39}
}

func (x *FeedVersionListResponse) GetFeedVersions() []*FeedVersion {
	if x != nil {
		return x.FeedVersions
	}
	return nil
}

type FeedVersionPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedVersion *FeedVersion                            `protobuf:"bytes,1,opt,name=feed_version,json=feedVersion,proto3" json:"feed_version,omitempty"`
	Feed        *Feed                                   `protobuf:"bytes,2,opt,name=feed,proto3" json:"feed,omitempty"`
	Group       *Group                                  `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Actions     *FeedVersionPermissionsResponse_Actions `protobuf:"bytes,4,opt,name=actions,proto3" json:"actions,omitempty"`
	Users       *FeedVersionPermissionsResponse_Users   `protobuf:"bytes,5,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *FeedVersionPermissionsResponse) Reset() {
	*x = FeedVersionPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionPermissionsResponse) ProtoMessage() {}

func (x *FeedVersionPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionPermissionsResponse.ProtoReflect.Descriptor instead.
func (*FeedVersionPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{40}
}

func (x *FeedVersionPermissionsResponse) GetFeedVersion() *FeedVersion {
	if x != nil {
		return x.FeedVersion
	}
	return nil
}

func (x *FeedVersionPermissionsResponse) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

func (x *FeedVersionPermissionsResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *FeedVersionPermissionsResponse) GetActions() *FeedVersionPermissionsResponse_Actions {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *FeedVersionPermissionsResponse) GetUsers() *FeedVersionPermissionsResponse_Users {
	if x != nil {
		return x.Users
	}
	return nil
}

type FeedVersionModifyPermissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserRelation *UserRelation `protobuf:"bytes,2,opt,name=user_relation,json=userRelation,proto3" json:"user_relation,omitempty"`
}

func (x *FeedVersionModifyPermissionRequest) Reset() {
	*x = FeedVersionModifyPermissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionModifyPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionModifyPermissionRequest) ProtoMessage() {}

func (x *FeedVersionModifyPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionModifyPermissionRequest.ProtoReflect.Descriptor instead.
func (*FeedVersionModifyPermissionRequest) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{41}
}

func (x *FeedVersionModifyPermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeedVersionModifyPermissionRequest) GetUserRelation() *UserRelation {
	if x != nil {
		return x.UserRelation
	}
	return nil
}

type FeedVersionSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FeedVersionSaveResponse) Reset() {
	*x = FeedVersionSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionSaveResponse) ProtoMessage() {}

func (x *FeedVersionSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionSaveResponse.ProtoReflect.Descriptor instead.
func (*FeedVersionSaveResponse) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{42}
}

type TenantPermissionsResponse_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanEditMembers bool `protobuf:"varint,1,opt,name=can_edit_members,json=canEditMembers,proto3" json:"can_edit_members,omitempty"`
	CanView        bool `protobuf:"varint,2,opt,name=can_view,json=canView,proto3" json:"can_view,omitempty"`
	CanEdit        bool `protobuf:"varint,3,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	CanCreateOrg   bool `protobuf:"varint,4,opt,name=can_create_org,json=canCreateOrg,proto3" json:"can_create_org,omitempty"`
	CanDeleteOrg   bool `protobuf:"varint,5,opt,name=can_delete_org,json=canDeleteOrg,proto3" json:"can_delete_org,omitempty"`
}

func (x *TenantPermissionsResponse_Actions) Reset() {
	*x = TenantPermissionsResponse_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantPermissionsResponse_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantPermissionsResponse_Actions) ProtoMessage() {}

func (x *TenantPermissionsResponse_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantPermissionsResponse_Actions.ProtoReflect.Descriptor instead.
func (*TenantPermissionsResponse_Actions) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{12, 0}
}

func (x *TenantPermissionsResponse_Actions) GetCanEditMembers() bool {
	if x != nil {
		return x.CanEditMembers
	}
	return false
}

func (x *TenantPermissionsResponse_Actions) GetCanView() bool {
	if x != nil {
		return x.CanView
	}
	return false
}

func (x *TenantPermissionsResponse_Actions) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *TenantPermissionsResponse_Actions) GetCanCreateOrg() bool {
	if x != nil {
		return x.CanCreateOrg
	}
	return false
}

func (x *TenantPermissionsResponse_Actions) GetCanDeleteOrg() bool {
	if x != nil {
		return x.CanDeleteOrg
	}
	return false
}

type TenantPermissionsResponse_Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admins  []*User `protobuf:"bytes,1,rep,name=admins,proto3" json:"admins,omitempty"`
	Members []*User `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *TenantPermissionsResponse_Users) Reset() {
	*x = TenantPermissionsResponse_Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantPermissionsResponse_Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantPermissionsResponse_Users) ProtoMessage() {}

func (x *TenantPermissionsResponse_Users) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantPermissionsResponse_Users.ProtoReflect.Descriptor instead.
func (*TenantPermissionsResponse_Users) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{12, 1}
}

func (x *TenantPermissionsResponse_Users) GetAdmins() []*User {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *TenantPermissionsResponse_Users) GetMembers() []*User {
	if x != nil {
		return x.Members
	}
	return nil
}

type GroupPermissionsResponse_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanView        bool `protobuf:"varint,1,opt,name=can_view,json=canView,proto3" json:"can_view,omitempty"`
	CanEditMembers bool `protobuf:"varint,2,opt,name=can_edit_members,json=canEditMembers,proto3" json:"can_edit_members,omitempty"`
	CanCreateFeed  bool `protobuf:"varint,3,opt,name=can_create_feed,json=canCreateFeed,proto3" json:"can_create_feed,omitempty"`
	CanDeleteFeed  bool `protobuf:"varint,4,opt,name=can_delete_feed,json=canDeleteFeed,proto3" json:"can_delete_feed,omitempty"`
	CanEdit        bool `protobuf:"varint,5,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *GroupPermissionsResponse_Actions) Reset() {
	*x = GroupPermissionsResponse_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPermissionsResponse_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPermissionsResponse_Actions) ProtoMessage() {}

func (x *GroupPermissionsResponse_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPermissionsResponse_Actions.ProtoReflect.Descriptor instead.
func (*GroupPermissionsResponse_Actions) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{25, 0}
}

func (x *GroupPermissionsResponse_Actions) GetCanView() bool {
	if x != nil {
		return x.CanView
	}
	return false
}

func (x *GroupPermissionsResponse_Actions) GetCanEditMembers() bool {
	if x != nil {
		return x.CanEditMembers
	}
	return false
}

func (x *GroupPermissionsResponse_Actions) GetCanCreateFeed() bool {
	if x != nil {
		return x.CanCreateFeed
	}
	return false
}

func (x *GroupPermissionsResponse_Actions) GetCanDeleteFeed() bool {
	if x != nil {
		return x.CanDeleteFeed
	}
	return false
}

func (x *GroupPermissionsResponse_Actions) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type GroupPermissionsResponse_Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Managers []*User `protobuf:"bytes,1,rep,name=managers,proto3" json:"managers,omitempty"`
	Editors  []*User `protobuf:"bytes,2,rep,name=editors,proto3" json:"editors,omitempty"`
	Viewers  []*User `protobuf:"bytes,3,rep,name=viewers,proto3" json:"viewers,omitempty"`
}

func (x *GroupPermissionsResponse_Users) Reset() {
	*x = GroupPermissionsResponse_Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPermissionsResponse_Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPermissionsResponse_Users) ProtoMessage() {}

func (x *GroupPermissionsResponse_Users) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPermissionsResponse_Users.ProtoReflect.Descriptor instead.
func (*GroupPermissionsResponse_Users) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{25, 1}
}

func (x *GroupPermissionsResponse_Users) GetManagers() []*User {
	if x != nil {
		return x.Managers
	}
	return nil
}

func (x *GroupPermissionsResponse_Users) GetEditors() []*User {
	if x != nil {
		return x.Editors
	}
	return nil
}

func (x *GroupPermissionsResponse_Users) GetViewers() []*User {
	if x != nil {
		return x.Viewers
	}
	return nil
}

type FeedPermissionsResponse_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanView              bool `protobuf:"varint,1,opt,name=can_view,json=canView,proto3" json:"can_view,omitempty"`
	CanEdit              bool `protobuf:"varint,2,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
	CanSetGroup          bool `protobuf:"varint,3,opt,name=can_set_group,json=canSetGroup,proto3" json:"can_set_group,omitempty"`
	CanCreateFeedVersion bool `protobuf:"varint,4,opt,name=can_create_feed_version,json=canCreateFeedVersion,proto3" json:"can_create_feed_version,omitempty"`
	CanDeleteFeedVersion bool `protobuf:"varint,5,opt,name=can_delete_feed_version,json=canDeleteFeedVersion,proto3" json:"can_delete_feed_version,omitempty"`
}

func (x *FeedPermissionsResponse_Actions) Reset() {
	*x = FeedPermissionsResponse_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedPermissionsResponse_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedPermissionsResponse_Actions) ProtoMessage() {}

func (x *FeedPermissionsResponse_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedPermissionsResponse_Actions.ProtoReflect.Descriptor instead.
func (*FeedPermissionsResponse_Actions) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{30, 0}
}

func (x *FeedPermissionsResponse_Actions) GetCanView() bool {
	if x != nil {
		return x.CanView
	}
	return false
}

func (x *FeedPermissionsResponse_Actions) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

func (x *FeedPermissionsResponse_Actions) GetCanSetGroup() bool {
	if x != nil {
		return x.CanSetGroup
	}
	return false
}

func (x *FeedPermissionsResponse_Actions) GetCanCreateFeedVersion() bool {
	if x != nil {
		return x.CanCreateFeedVersion
	}
	return false
}

func (x *FeedPermissionsResponse_Actions) GetCanDeleteFeedVersion() bool {
	if x != nil {
		return x.CanDeleteFeedVersion
	}
	return false
}

type FeedVersionPermissionsResponse_Actions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanView        bool `protobuf:"varint,1,opt,name=can_view,json=canView,proto3" json:"can_view,omitempty"`
	CanEditMembers bool `protobuf:"varint,2,opt,name=can_edit_members,json=canEditMembers,proto3" json:"can_edit_members,omitempty"`
	CanEdit        bool `protobuf:"varint,3,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *FeedVersionPermissionsResponse_Actions) Reset() {
	*x = FeedVersionPermissionsResponse_Actions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionPermissionsResponse_Actions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionPermissionsResponse_Actions) ProtoMessage() {}

func (x *FeedVersionPermissionsResponse_Actions) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionPermissionsResponse_Actions.ProtoReflect.Descriptor instead.
func (*FeedVersionPermissionsResponse_Actions) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{40, 0}
}

func (x *FeedVersionPermissionsResponse_Actions) GetCanView() bool {
	if x != nil {
		return x.CanView
	}
	return false
}

func (x *FeedVersionPermissionsResponse_Actions) GetCanEditMembers() bool {
	if x != nil {
		return x.CanEditMembers
	}
	return false
}

func (x *FeedVersionPermissionsResponse_Actions) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type FeedVersionPermissionsResponse_Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Editors []*User `protobuf:"bytes,1,rep,name=editors,proto3" json:"editors,omitempty"`
	Viewers []*User `protobuf:"bytes,2,rep,name=viewers,proto3" json:"viewers,omitempty"`
}

func (x *FeedVersionPermissionsResponse_Users) Reset() {
	*x = FeedVersionPermissionsResponse_Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedVersionPermissionsResponse_Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedVersionPermissionsResponse_Users) ProtoMessage() {}

func (x *FeedVersionPermissionsResponse_Users) ProtoReflect() protoreflect.Message {
	mi := &file_checker_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedVersionPermissionsResponse_Users.ProtoReflect.Descriptor instead.
func (*FeedVersionPermissionsResponse_Users) Descriptor() ([]byte, []int) {
	return file_checker_proto_rawDescGZIP(), []int{40, 1}
}

func (x *FeedVersionPermissionsResponse_Users) GetEditors() []*User {
	if x != nil {
		return x.Editors
	}
	return nil
}

func (x *FeedVersionPermissionsResponse_Users) GetViewers() []*User {
	if x != nil {
		return x.Viewers
	}
	return nil
}

var File_checker_proto protoreflect.FileDescriptor

var file_checker_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x61, 0x7a, 0x70, 0x62, 0x22, 0x78, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x61, 0x7a, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x1f, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x71, 0x22, 0x1d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x2e, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x11, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x7a, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x22, 0x1f, 0x0a, 0x0d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22, 0x3c,
	0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xf1, 0x03, 0x0a,
	0x19, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x7a, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0xb5, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6e,
	0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6e, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x72, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x1a, 0x51, 0x0a,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x06, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x15, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x18, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3e, 0x0a, 0x19, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x68, 0x0a, 0x1d, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x14, 0x0a, 0x12, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67,
	0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x38, 0x0a, 0x11, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xbc, 0x04, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x66,
	0x65, 0x65, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70,
	0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x40, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x07,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63,
	0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x1a, 0x7b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x26, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x24,
	0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x73, 0x22, 0x36, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x49, 0x0a, 0x04,
	0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x65, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6e, 0x65, 0x73, 0x74, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x17, 0x46, 0x65,
	0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3f, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x7a, 0x70, 0x62,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xd1, 0x01, 0x0a, 0x07, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x35, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x63, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a,
	0x0c, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x22, 0x34, 0x0a,
	0x10, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x20, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x13, 0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x0b, 0x46, 0x65, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x61, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61, 0x31,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x46, 0x65, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x66, 0x65,
	0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x24, 0x0a, 0x12, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x65, 0x65,
	0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe3, 0x03, 0x0a, 0x1e, 0x46, 0x65,
	0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c,
	0x66, 0x65, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x46, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a,
	0x69, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x6e, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61,
	0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x1a, 0x53, 0x0a, 0x05, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x07, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x7a, 0x70,
	0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22,
	0x6d, 0x0a, 0x22, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19,
	0x0a, 0x17, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xeb, 0x01, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x67, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e,
	0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x67, 0x10, 0x05,
	0x12, 0x1b, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x06, 0x12, 0x1b, 0x0a,
	0x17, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x63, 0x61,
	0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x10, 0x08, 0x12,
	0x13, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x0a, 0x2a, 0x59, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x66, 0x65, 0x65, 0x64, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x10, 0x05, 0x2a, 0x66, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x0e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x10, 0x05, 0x12, 0x0a,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x06, 0x32, 0xb5, 0x0e, 0x0a, 0x07, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x7a, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x12, 0x13, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x11, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x7a, 0x70, 0x62,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x7a, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x16, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x0c, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61,
	0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x2e,
	0x61, 0x7a, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x12, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x61, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61,
	0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x15, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x7a,
	0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x0f, 0x46, 0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x11, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0f, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e,
	0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x16, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x7a, 0x70, 0x62,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x18, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e,
	0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x1b, 0x46, 0x65, 0x65, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x7a, 0x70, 0x62, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checker_proto_rawDescOnce sync.Once
	file_checker_proto_rawDescData = file_checker_proto_rawDesc
)

func file_checker_proto_rawDescGZIP() []byte {
	file_checker_proto_rawDescOnce.Do(func() {
		file_checker_proto_rawDescData = protoimpl.X.CompressGZIP(file_checker_proto_rawDescData)
	})
	return file_checker_proto_rawDescData
}

var file_checker_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_checker_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_checker_proto_goTypes = []interface{}{
	(Action)(0),                                    // 0: azpb.Action
	(ObjectType)(0),                                // 1: azpb.ObjectType
	(Relation)(0),                                  // 2: azpb.Relation
	(*UserRelation)(nil),                           // 3: azpb.UserRelation
	(*User)(nil),                                   // 4: azpb.User
	(*UserListRequest)(nil),                        // 5: azpb.UserListRequest
	(*UserRequest)(nil),                            // 6: azpb.UserRequest
	(*UserListResponse)(nil),                       // 7: azpb.UserListResponse
	(*UserResponse)(nil),                           // 8: azpb.UserResponse
	(*Tenant)(nil),                                 // 9: azpb.Tenant
	(*TenantSaveRequest)(nil),                      // 10: azpb.TenantSaveRequest
	(*TenantRequest)(nil),                          // 11: azpb.TenantRequest
	(*TenantListRequest)(nil),                      // 12: azpb.TenantListRequest
	(*TenantResponse)(nil),                         // 13: azpb.TenantResponse
	(*TenantListResponse)(nil),                     // 14: azpb.TenantListResponse
	(*TenantPermissionsResponse)(nil),              // 15: azpb.TenantPermissionsResponse
	(*TenantCreateRequest)(nil),                    // 16: azpb.TenantCreateRequest
	(*TenantCreateGroupRequest)(nil),               // 17: azpb.TenantCreateGroupRequest
	(*TenantCreateGroupResponse)(nil),              // 18: azpb.TenantCreateGroupResponse
	(*TenantModifyPermissionRequest)(nil),          // 19: azpb.TenantModifyPermissionRequest
	(*TenantSaveResponse)(nil),                     // 20: azpb.TenantSaveResponse
	(*Group)(nil),                                  // 21: azpb.Group
	(*GroupRequest)(nil),                           // 22: azpb.GroupRequest
	(*GroupSaveRequest)(nil),                       // 23: azpb.GroupSaveRequest
	(*GroupListRequest)(nil),                       // 24: azpb.GroupListRequest
	(*GroupModifyPermissionRequest)(nil),           // 25: azpb.GroupModifyPermissionRequest
	(*GroupResponse)(nil),                          // 26: azpb.GroupResponse
	(*GroupListResponse)(nil),                      // 27: azpb.GroupListResponse
	(*GroupPermissionsResponse)(nil),               // 28: azpb.GroupPermissionsResponse
	(*GroupSaveResponse)(nil),                      // 29: azpb.GroupSaveResponse
	(*Feed)(nil),                                   // 30: azpb.Feed
	(*FeedRequest)(nil),                            // 31: azpb.FeedRequest
	(*FeedListRequest)(nil),                        // 32: azpb.FeedListRequest
	(*FeedPermissionsResponse)(nil),                // 33: azpb.FeedPermissionsResponse
	(*FeedResponse)(nil),                           // 34: azpb.FeedResponse
	(*FeedListResponse)(nil),                       // 35: azpb.FeedListResponse
	(*FeedSetGroupRequest)(nil),                    // 36: azpb.FeedSetGroupRequest
	(*FeedSaveResponse)(nil),                       // 37: azpb.FeedSaveResponse
	(*FeedVersion)(nil),                            // 38: azpb.FeedVersion
	(*FeedVersionListRequest)(nil),                 // 39: azpb.FeedVersionListRequest
	(*FeedVersionResponse)(nil),                    // 40: azpb.FeedVersionResponse
	(*FeedVersionRequest)(nil),                     // 41: azpb.FeedVersionRequest
	(*FeedVersionListResponse)(nil),                // 42: azpb.FeedVersionListResponse
	(*FeedVersionPermissionsResponse)(nil),         // 43: azpb.FeedVersionPermissionsResponse
	(*FeedVersionModifyPermissionRequest)(nil),     // 44: azpb.FeedVersionModifyPermissionRequest
	(*FeedVersionSaveResponse)(nil),                // 45: azpb.FeedVersionSaveResponse
	(*TenantPermissionsResponse_Actions)(nil),      // 46: azpb.TenantPermissionsResponse.Actions
	(*TenantPermissionsResponse_Users)(nil),        // 47: azpb.TenantPermissionsResponse.Users
	(*GroupPermissionsResponse_Actions)(nil),       // 48: azpb.GroupPermissionsResponse.Actions
	(*GroupPermissionsResponse_Users)(nil),         // 49: azpb.GroupPermissionsResponse.Users
	(*FeedPermissionsResponse_Actions)(nil),        // 50: azpb.FeedPermissionsResponse.Actions
	(*FeedVersionPermissionsResponse_Actions)(nil), // 51: azpb.FeedVersionPermissionsResponse.Actions
	(*FeedVersionPermissionsResponse_Users)(nil),   // 52: azpb.FeedVersionPermissionsResponse.Users
}
var file_checker_proto_depIdxs = []int32{
	1,  // 0: azpb.UserRelation.type:type_name -> azpb.ObjectType
	2,  // 1: azpb.UserRelation.relation:type_name -> azpb.Relation
	4,  // 2: azpb.UserListResponse.users:type_name -> azpb.User
	4,  // 3: azpb.UserResponse.user:type_name -> azpb.User
	9,  // 4: azpb.TenantSaveRequest.tenant:type_name -> azpb.Tenant
	9,  // 5: azpb.TenantResponse.tenant:type_name -> azpb.Tenant
	9,  // 6: azpb.TenantListResponse.tenants:type_name -> azpb.Tenant
	9,  // 7: azpb.TenantPermissionsResponse.tenant:type_name -> azpb.Tenant
	21, // 8: azpb.TenantPermissionsResponse.groups:type_name -> azpb.Group
	46, // 9: azpb.TenantPermissionsResponse.actions:type_name -> azpb.TenantPermissionsResponse.Actions
	47, // 10: azpb.TenantPermissionsResponse.users:type_name -> azpb.TenantPermissionsResponse.Users
	21, // 11: azpb.TenantCreateGroupRequest.group:type_name -> azpb.Group
	21, // 12: azpb.TenantCreateGroupResponse.group:type_name -> azpb.Group
	3,  // 13: azpb.TenantModifyPermissionRequest.user_relation:type_name -> azpb.UserRelation
	21, // 14: azpb.GroupSaveRequest.group:type_name -> azpb.Group
	3,  // 15: azpb.GroupModifyPermissionRequest.user_relation:type_name -> azpb.UserRelation
	21, // 16: azpb.GroupResponse.group:type_name -> azpb.Group
	21, // 17: azpb.GroupListResponse.groups:type_name -> azpb.Group
	21, // 18: azpb.GroupPermissionsResponse.group:type_name -> azpb.Group
	9,  // 19: azpb.GroupPermissionsResponse.tenant:type_name -> azpb.Tenant
	30, // 20: azpb.GroupPermissionsResponse.feeds:type_name -> azpb.Feed
	48, // 21: azpb.GroupPermissionsResponse.actions:type_name -> azpb.GroupPermissionsResponse.Actions
	49, // 22: azpb.GroupPermissionsResponse.users:type_name -> azpb.GroupPermissionsResponse.Users
	21, // 23: azpb.GroupSaveResponse.group:type_name -> azpb.Group
	30, // 24: azpb.FeedPermissionsResponse.feed:type_name -> azpb.Feed
	21, // 25: azpb.FeedPermissionsResponse.group:type_name -> azpb.Group
	50, // 26: azpb.FeedPermissionsResponse.actions:type_name -> azpb.FeedPermissionsResponse.Actions
	30, // 27: azpb.FeedResponse.feed:type_name -> azpb.Feed
	30, // 28: azpb.FeedListResponse.feeds:type_name -> azpb.Feed
	38, // 29: azpb.FeedVersionResponse.feed_version:type_name -> azpb.FeedVersion
	38, // 30: azpb.FeedVersionListResponse.feed_versions:type_name -> azpb.FeedVersion
	38, // 31: azpb.FeedVersionPermissionsResponse.feed_version:type_name -> azpb.FeedVersion
	30, // 32: azpb.FeedVersionPermissionsResponse.feed:type_name -> azpb.Feed
	21, // 33: azpb.FeedVersionPermissionsResponse.group:type_name -> azpb.Group
	51, // 34: azpb.FeedVersionPermissionsResponse.actions:type_name -> azpb.FeedVersionPermissionsResponse.Actions
	52, // 35: azpb.FeedVersionPermissionsResponse.users:type_name -> azpb.FeedVersionPermissionsResponse.Users
	3,  // 36: azpb.FeedVersionModifyPermissionRequest.user_relation:type_name -> azpb.UserRelation
	4,  // 37: azpb.TenantPermissionsResponse.Users.admins:type_name -> azpb.User
	4,  // 38: azpb.TenantPermissionsResponse.Users.members:type_name -> azpb.User
	4,  // 39: azpb.GroupPermissionsResponse.Users.managers:type_name -> azpb.User
	4,  // 40: azpb.GroupPermissionsResponse.Users.editors:type_name -> azpb.User
	4,  // 41: azpb.GroupPermissionsResponse.Users.viewers:type_name -> azpb.User
	4,  // 42: azpb.FeedVersionPermissionsResponse.Users.editors:type_name -> azpb.User
	4,  // 43: azpb.FeedVersionPermissionsResponse.Users.viewers:type_name -> azpb.User
	5,  // 44: azpb.Checker.UserList:input_type -> azpb.UserListRequest
	6,  // 45: azpb.Checker.User:input_type -> azpb.UserRequest
	12, // 46: azpb.Checker.TenantList:input_type -> azpb.TenantListRequest
	11, // 47: azpb.Checker.Tenant:input_type -> azpb.TenantRequest
	11, // 48: azpb.Checker.TenantPermissions:input_type -> azpb.TenantRequest
	10, // 49: azpb.Checker.TenantSave:input_type -> azpb.TenantSaveRequest
	19, // 50: azpb.Checker.TenantAddPermission:input_type -> azpb.TenantModifyPermissionRequest
	19, // 51: azpb.Checker.TenantRemovePermission:input_type -> azpb.TenantModifyPermissionRequest
	16, // 52: azpb.Checker.TenantCreate:input_type -> azpb.TenantCreateRequest
	17, // 53: azpb.Checker.TenantCreateGroup:input_type -> azpb.TenantCreateGroupRequest
	24, // 54: azpb.Checker.GroupList:input_type -> azpb.GroupListRequest
	22, // 55: azpb.Checker.Group:input_type -> azpb.GroupRequest
	22, // 56: azpb.Checker.GroupPermissions:input_type -> azpb.GroupRequest
	23, // 57: azpb.Checker.GroupSave:input_type -> azpb.GroupSaveRequest
	25, // 58: azpb.Checker.GroupAddPermission:input_type -> azpb.GroupModifyPermissionRequest
	25, // 59: azpb.Checker.GroupRemovePermission:input_type -> azpb.GroupModifyPermissionRequest
	32, // 60: azpb.Checker.FeedList:input_type -> azpb.FeedListRequest
	31, // 61: azpb.Checker.Feed:input_type -> azpb.FeedRequest
	31, // 62: azpb.Checker.FeedPermissions:input_type -> azpb.FeedRequest
	36, // 63: azpb.Checker.FeedSetGroup:input_type -> azpb.FeedSetGroupRequest
	39, // 64: azpb.Checker.FeedVersionList:input_type -> azpb.FeedVersionListRequest
	41, // 65: azpb.Checker.FeedVersion:input_type -> azpb.FeedVersionRequest
	41, // 66: azpb.Checker.FeedVersionPermissions:input_type -> azpb.FeedVersionRequest
	44, // 67: azpb.Checker.FeedVersionAddPermission:input_type -> azpb.FeedVersionModifyPermissionRequest
	44, // 68: azpb.Checker.FeedVersionRemovePermission:input_type -> azpb.FeedVersionModifyPermissionRequest
	7,  // 69: azpb.Checker.UserList:output_type -> azpb.UserListResponse
	8,  // 70: azpb.Checker.User:output_type -> azpb.UserResponse
	14, // 71: azpb.Checker.TenantList:output_type -> azpb.TenantListResponse
	13, // 72: azpb.Checker.Tenant:output_type -> azpb.TenantResponse
	15, // 73: azpb.Checker.TenantPermissions:output_type -> azpb.TenantPermissionsResponse
	20, // 74: azpb.Checker.TenantSave:output_type -> azpb.TenantSaveResponse
	20, // 75: azpb.Checker.TenantAddPermission:output_type -> azpb.TenantSaveResponse
	20, // 76: azpb.Checker.TenantRemovePermission:output_type -> azpb.TenantSaveResponse
	20, // 77: azpb.Checker.TenantCreate:output_type -> azpb.TenantSaveResponse
	29, // 78: azpb.Checker.TenantCreateGroup:output_type -> azpb.GroupSaveResponse
	27, // 79: azpb.Checker.GroupList:output_type -> azpb.GroupListResponse
	26, // 80: azpb.Checker.Group:output_type -> azpb.GroupResponse
	28, // 81: azpb.Checker.GroupPermissions:output_type -> azpb.GroupPermissionsResponse
	29, // 82: azpb.Checker.GroupSave:output_type -> azpb.GroupSaveResponse
	29, // 83: azpb.Checker.GroupAddPermission:output_type -> azpb.GroupSaveResponse
	29, // 84: azpb.Checker.GroupRemovePermission:output_type -> azpb.GroupSaveResponse
	35, // 85: azpb.Checker.FeedList:output_type -> azpb.FeedListResponse
	34, // 86: azpb.Checker.Feed:output_type -> azpb.FeedResponse
	33, // 87: azpb.Checker.FeedPermissions:output_type -> azpb.FeedPermissionsResponse
	37, // 88: azpb.Checker.FeedSetGroup:output_type -> azpb.FeedSaveResponse
	42, // 89: azpb.Checker.FeedVersionList:output_type -> azpb.FeedVersionListResponse
	40, // 90: azpb.Checker.FeedVersion:output_type -> azpb.FeedVersionResponse
	43, // 91: azpb.Checker.FeedVersionPermissions:output_type -> azpb.FeedVersionPermissionsResponse
	45, // 92: azpb.Checker.FeedVersionAddPermission:output_type -> azpb.FeedVersionSaveResponse
	45, // 93: azpb.Checker.FeedVersionRemovePermission:output_type -> azpb.FeedVersionSaveResponse
	69, // [69:94] is the sub-list for method output_type
	44, // [44:69] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_checker_proto_init() }
func file_checker_proto_init() {
	if File_checker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tenant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantCreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantCreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantModifyPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupModifyPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedSetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionModifyPermissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantPermissionsResponse_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantPermissionsResponse_Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPermissionsResponse_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPermissionsResponse_Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedPermissionsResponse_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionPermissionsResponse_Actions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedVersionPermissionsResponse_Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checker_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checker_proto_goTypes,
		DependencyIndexes: file_checker_proto_depIdxs,
		EnumInfos:         file_checker_proto_enumTypes,
		MessageInfos:      file_checker_proto_msgTypes,
	}.Build()
	File_checker_proto = out.File
	file_checker_proto_rawDesc = nil
	file_checker_proto_goTypes = nil
	file_checker_proto_depIdxs = nil
}
