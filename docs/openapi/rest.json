{
  "openapi": "3.0.0",
  "info": {
    "description": "Transitland REST API",
    "version": "1.0.0-oas3",
    "title": "Transitland REST API",
    "contact": {
      "email": "hello@transit.land"
    }
  },
  "paths": {
    "/feeds/{feed_key}/download_latest_feed_version": {
      "get": {
        "summary": "",
        "description": "Download latest feed version for this feed",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "feed_key",
            "description": "Feed lookup key; can be an integer ID or a Onestop ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Download the latest feed version GTFS zip for this feed, if redistribution is allowd by the source feed's license"
                }
              }
            }
          }
        }
      }
    },
    "/feeds": {
      "x-alternates": [
        {
          "path": "/feeds.{format}",
          "description": "Request feeds in specified format",
          "method": "get"
        },
        {
          "path": "/feeds/{feed_key}",
          "description": "Request a feed by ID or Onestop ID",
          "method": "get"
        },
        {
          "path": "/feeds/{feed_key}.{format}",
          "description": "Request a feed by ID or Onestop ID in specified format",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Feeds",
        "description": "Search for feeds",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "query",
            "name": "feed_key",
            "description": "Feed lookup key; can be an integer ID or a Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/feeds?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=geojson",
                "url": "/feeds?format=geojson"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/searchParam",
            "x-example-requests": [
              {
                "description": "search=caltrain",
                "url": "/feeds?search=caltrain"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/onestopParam",
            "x-example-requests": [
              {
                "description": "onestop_id=f-sf~bay~area~rg",
                "url": "/feeds?onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "in": "query",
            "name": "spec",
            "description": "Type of data contained in this feed",
            "x-example-requests": [
              {
                "description": "spec=gtfs",
                "url": "/feeds?spec=gtfs"
              }
            ],
            "schema": {
              "type": "string",
              "nullable": false,
              "enum": [
                "gtfs",
                "gtfs-rt",
                "gbfs",
                "mds"
              ]
            }
          },
          {
            "in": "query",
            "name": "fetch_error",
            "description": "Search for feeds with or without a fetch error",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "fetch_error=true",
                "url": "/feeds?fetch_error=true"
              }
            ]
          },
          {
            "in": "query",
            "name": "tag_key",
            "description": "Search for feeds with a tag. Combine with tag_value also query for the value of the tag.",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "tag_key=gtfs_data_exchange",
                "url": "/feeds?tag_key=gtfs_data_exchange"
              }
            ]
          },
          {
            "in": "query",
            "name": "tag_value",
            "description": "Search for feeds tagged with a given value. Must be combined with tag_key.",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "tag_key=unstable_url&tag_value=true",
                "url": "/feeds?tag_key=unstable_url&tag_value=true"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for feeds geographically; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/feeds?lon=-122.3?lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/feeds?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/feed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed_versions": {
      "x-alternates": [
        {
          "path": "/feeds_versions.{format}",
          "description": "Request feed versions in specified format",
          "method": "get"
        },
        {
          "path": "/feeds_versions/{feed_version_key}",
          "description": "Request a feed version by ID or SHA1",
          "method": "get"
        },
        {
          "path": "/feeds_versions/{feed_version_key}.{format}",
          "description": "Request a feed version by ID or SHA1 in specified format",
          "method": "get"
        },
        {
          "path": "/feeds/{feed_key}/feed_versions",
          "description": "Request feed versions by feed ID or OnestopID",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Feed Versions",
        "description": "Search for feed versions",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "query",
            "name": "feed_version_key",
            "description": "Feed version lookup key; can be an integer ID or a SHA1 value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "feed_key",
            "description": "Feed lookup key; can be an integer ID or Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/feed_versions?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=geojson",
                "url": "/feed_versions?format=geojson"
              }
            ]
          },
          {
            "in": "query",
            "name": "sha1",
            "description": "Feed version SHA1",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "sha1=e535eb2b3...",
                "url": "/feed_versions?sha1=dd7aca4a8e4c90908fd3603c097fabee75fea907"
              }
            ]
          },
          {
            "in": "query",
            "name": "feed_onestop_id",
            "description": "Feed OnestopID",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-sf~bay~area~rg",
                "url": "/feed_versions?feed_onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "in": "query",
            "name": "fetched_before",
            "description": "Filter for feed versions fetched earlier than given date time in UTC",
            "schema": {
              "type": "string",
              "format": "datetime"
            },
            "x-example-requests": [
              {
                "description": "fetched_before=2023-01-01T00:00:00Z",
                "url": "/feed_versions?fetched_before=2023-01-01T00:00:00Z"
              }
            ]
          },
          {
            "in": "query",
            "name": "fetched_after",
            "description": "Filter for feed versions fetched since given date time in UTC",
            "schema": {
              "type": "string",
              "format": "datetime"
            },
            "x-example-requests": [
              {
                "description": "fetched_after=2023-01-01T00:00:00Z",
                "url": "/feed_versions?fetched_after=2023-01-01T00:00:00Z"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for feed versions geographically; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/feed_versions?lon=-122.3&lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/feed_versions?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/feed_version"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feed_versions/{feed_version_key}/download": {
      "get": {
        "summary": "",
        "description": "Download this feed version",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "feed_version_key",
            "description": "Feed version lookup key; can be an integer ID or a SHA1 value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Download this feed version GTFS zip for this feed, if redistribution is allowd by the source feed's license. Available only using Transitland professional or enterprise plan API keys."
                }
              }
            }
          }
        }
      }
    },
    "/operators": {
      "x-alternates": [
        {
          "path": "/operators.{format}",
          "description": "Request operators in specified format",
          "method": "get"
        },
        {
          "path": "/operators/{onestop_id}",
          "description": "Request an operator by Onestop ID",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Operators",
        "description": "Search for operators",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/searchParam",
            "x-example-requests": [
              {
                "description": "search=bart",
                "url": "/operators?search=caltrain"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/onestopParam",
            "x-example-requests": [
              {
                "description": "onestop_id=o-9q9-caltrain",
                "url": "/operators?onestop_id=o-9q9-caltrain"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/feedParam",
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-sf~bay~area~rg",
                "url": "/operators?feed_onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "in": "query",
            "name": "tag_key",
            "description": "Search for operators with a tag. Combine with tag_value also query for the value of the tag.",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "tag_key=us_ntd_id",
                "url": "/operators?tag_key=us_ntd_id"
              }
            ]
          },
          {
            "in": "query",
            "name": "tag_value",
            "description": "Search for feeds tagged with a given value. Must be combined with tag_key.",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "tag_key=us_ntd_id&tag_value=40029",
                "url": "/operators?tag_key=us_ntd_id&tag_value=40029"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm0NameParam",
            "x-example-requests": [
              {
                "description": "adm0_name=Mexico",
                "url": "/operators?adm0_name=Mexico"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm0IsoParam",
            "x-example-requests": [
              {
                "description": "adm0_iso=US",
                "url": "/operators?adm0_iso=US"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm1NameParam",
            "x-example-requests": [
              {
                "description": "adm1_name=California",
                "url": "/operators?adm1_name=California"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm1IsoParam",
            "x-example-requests": [
              {
                "description": "adm1_iso=US-CA",
                "url": "/operators?adm1_iso=US-CA"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/cityNameParam",
            "x-example-requests": [
              {
                "description": "city_name=Oakland",
                "url": "/operators?city_name=Oakland"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for operators geographically, based on stops at this location; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/operators?lon=-122.3&lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/operators?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/operator"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/agencies": {
      "x-alternates": [
        {
          "path": "/agencies.{format}",
          "description": "Request agencies in specified format",
          "method": "get"
        },
        {
          "path": "/agencies/{agency_key}",
          "description": "Request an agency",
          "method": "get"
        },
        {
          "path": "/agencies/{agency_key}.{format}",
          "description": "Request an agency in specified format",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Agencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "query",
            "name": "agency_key",
            "description": "Agency lookup key; can be an integer ID, a '<feed onestop_id>:<gtfs agency_id>' key, or a Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/agencies?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=geojson",
                "url": "/agencies?format=geojson"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/searchParam",
            "x-example-requests": [
              {
                "description": "search=bart",
                "url": "/agencies?search=bart"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/onestopParam",
            "x-example-requests": [
              {
                "description": "onestop_id=o-9q9-caltrain",
                "url": "/agencies?onestop_id=o-9q9-caltrain"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/sha1Param",
            "x-example-requests": [
              {
                "description": "feed_version_sha1=1c4721d4...",
                "url": "/agencies?feed_version_sha1=1c4721d4e0c9fae1e81f7c79660696e4280ed05b"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/feedParam",
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-sf~bay~area~rg",
                "url": "/agencies?feed_onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "in": "query",
            "name": "agency_id",
            "description": "Search for records with this GTFS agency_id (string)",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "agency_id=BART",
                "url": "/agencies?agency_id=BART"
              }
            ]
          },
          {
            "in": "query",
            "name": "agency_name",
            "description": "Search for records with this GTFS agency_name",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "agency_name=Caltrain",
                "url": "/agencies?agency_name=Caltrain"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for agencies geographically, based on stops at this location; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/agencies?lon=-122.3&lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/agencies?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm0NameParam",
            "x-example-requests": [
              {
                "description": "adm0_name=Mexico",
                "url": "/agencies?adm0_name=Mexico"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm0IsoParam",
            "x-example-requests": [
              {
                "description": "adm0_iso=US",
                "url": "/agencies?adm0_iso=US"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm1NameParam",
            "x-example-requests": [
              {
                "description": "adm1_name=California",
                "url": "/agencies?adm1_name=California"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/adm1IsoParam",
            "x-example-requests": [
              {
                "description": "adm1_iso=US-CA",
                "url": "/agencies?adm1_iso=US-CA"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/cityNameParam",
            "x-example-requests": [
              {
                "description": "city_name=Oakland",
                "url": "/agencies?city_name=Oakland"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/agency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/routes": {
      "x-alternates": [
        {
          "path": "/routes.{format}",
          "description": "Request routes in specified format",
          "method": "get"
        },
        {
          "path": "/routes/{route_key}",
          "description": "Request a route",
          "method": "get"
        },
        {
          "path": "/routes/{route_key}.{format}",
          "description": "Request a route in a specified format",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Routes",
        "description": "Search for routes",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "query",
            "name": "route_key",
            "description": "Route lookup key; can be an integer ID, a '<feed onestop_id>:<gtfs route_id>' key, or a Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/routes?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=png",
                "url": "/routes?format=png&feed_onestop_id=f-dr5r7-nycdotsiferry"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/searchParam",
            "x-example-requests": [
              {
                "description": "search=daly+city",
                "url": "/routes?search=daly+city"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/onestopParam",
            "x-example-requests": [
              {
                "description": "onestop_id=r-9q9j-l1",
                "url": "/routes?onestop_id=r-9q9j-l1"
              }
            ]
          },
          {
            "in": "query",
            "name": "route_id",
            "description": "Search for records with this GTFS route_id",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "route_id=Bu-130",
                "url": "/routes?feed_onestop_id=f-sf~bay~area~rg&route_id=AC:10"
              }
            ]
          },
          {
            "in": "query",
            "name": "route_type",
            "description": "Search for routes with this GTFS route (vehicle) type",
            "schema": {
              "type": "integer"
            },
            "x-example-requests": [
              {
                "description": "route_type=1",
                "url": "/routes?route_type=1"
              }
            ]
          },
          {
            "in": "query",
            "name": "operator_onestop_id",
            "description": "Search for records by operator OnestopID",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "operator_onestop_id=...",
                "url": "/routes?operator_onestop_id=o-9q9-caltrain"
              }
            ]
          },
          {
            "in": "query",
            "name": "include_geometry",
            "description": "Include route geometry",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "include_geometry=true",
                "url": "/routes?include_geometry=true"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/sha1Param",
            "x-example-requests": [
              {
                "description": "feed_version_sha1=041ffeec...",
                "url": "/routes?feed_version_sha1=041ffeec98316e560bc2b91960f7150ad329bd5f"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/feedParam",
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-sf~bay~area~rg",
                "url": "/routes?feed_onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for routes geographically, based on stops at this location; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/routes?lon=-122.3&lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/routes?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/route"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stops": {
      "x-alternates": [
        {
          "path": "/stops.{format}",
          "description": "Request stops in specified format",
          "method": "get"
        },
        {
          "path": "/stops/{stop_key}",
          "description": "Request a stop",
          "method": "get"
        },
        {
          "path": "/stops/{stop_key}.{format}",
          "description": "Request a stop in a specified format",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Stops",
        "description": "Search for stops",
        "parameters": [
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "query",
            "name": "stop_key",
            "description": "Stop lookup key; can be an integer ID, a '<feed onestop_id>:<gtfs stop_id>' key, or a Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/stops?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=geojson",
                "url": "/stops?format=geojson"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/searchParam",
            "x-example-requests": [
              {
                "description": "search=embarcadero",
                "url": "/stops?search=embarcadero"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/onestopParam",
            "x-example-requests": [
              {
                "description": "onestop_id=...",
                "url": "/stops?onestop_id=s-9q8yyzcny3-embarcadero"
              }
            ]
          },
          {
            "in": "query",
            "name": "stop_id",
            "description": "Search for records with this GTFS stop_id",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "stop_id=EMBR",
                "url": "/stops?feed_onestop_id=f-c20-trimet&stop_id=1108"
              }
            ]
          },
          {
            "in": "query",
            "name": "served_by_onestop_ids",
            "description": "Search stops visited by a route or agency OnestopID. Accepts comma separated values.",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "served_by_onestop_ids=o-9q9-bart,o-9q9-caltrain",
                "url": "/stops?served_by_onestop_ids=o-9q9-bart,o-9q9-caltrain"
              }
            ]
          },
          {
            "in": "query",
            "name": "served_by_route_type",
            "description": "Search for stops served by a particular route (vehicle) type",
            "schema": {
              "type": "integer"
            },
            "x-example-requests": [
              {
                "description": "served_by_route_type=1",
                "url": "/stops?served_by_route_type=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/sha1Param",
            "x-example-requests": [
              {
                "description": "feed_version_sha1=1c4721d4...",
                "url": "/stops?feed_version_sha1=1c4721d4e0c9fae1e81f7c79660696e4280ed05b"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/feedParam",
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-c20-trimet",
                "url": "/stops?feed_onestop_id=f-c20-trimet"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/radiusParam",
            "x-description": "Search for stops geographically; radius is in meters, requires lon and lat",
            "x-example-requests": [
              {
                "description": "lon=-122&lat=37&radius=1000",
                "url": "/stops?lon=-122.3&lat=37.8&radius=1000"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/bboxParam",
            "x-example-requests": [
              {
                "description": "bbox=-122.269,37.807,-122.267,37.808",
                "url": "/stops?bbox=-122.269,37.807,-122.267,37.808"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stop"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stops/{stop_key}/departures": {
      "get": {
        "summary": "Stop departures",
        "description": "Departures from a given stop based on static and real-time data",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "path",
            "required": true,
            "name": "stop_key",
            "description": "Stop lookup key; can be an integer ID, a '<feed onestop_id>:<gtfs stop_id'> key, a Onestop ID",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "f-sf~bay~area~rg:LAKE",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures"
              },
              {
                "description": "s-9q9p1bc1td-lakemerritt",
                "url": "/stops/s-9q9p1bc1td-lakemerritt/departures"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?limit=1"
              }
            ]
          },
          {
            "name": "service_date",
            "in": "query",
            "description": "Search for departures on a specified GTFS service calendar date, in YYYY-MM-DD format",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-example-requests": [
              {
                "description": "service_date=2022-09-28",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?service_date=2022-09-28"
              }
            ]
          },
          {
            "name": "date",
            "in": "query",
            "description": "Search for departures on a specified calendar date, in YYYY-MM-DD format",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-example-requests": [
              {
                "description": "date=2022-09-28",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?date=2022-09-28"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/relativeDateParam",
            "x-example-requests": [
              {
                "description": "relative_date=NEXT_MONDAY",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?relative_date=NEXT_MONDAY"
              }
            ]
          },
          {
            "name": "next",
            "in": "query",
            "description": "Search for departures leaving within the next specified number of seconds in local time",
            "schema": {
              "type": "integer"
            },
            "x-example-requests": [
              {
                "description": "next=600",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?next=600"
              }
            ]
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Search for departures leaving after a specified local time, in HH:MM:SS format",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "start_time=10:00:00",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?start_time=10:00:00&service_date=2022-09-28"
              }
            ]
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "Search for departures leaving before a specified local time, in HH:MM:SS format",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "end_time=11:00:00",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?end_time=11:00:00&service_date=2022-09-28"
              }
            ]
          },
          {
            "name": "include_geometry",
            "in": "query",
            "description": "Include route geometry",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "include_geometry=true",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?include_geometry=true"
              }
            ]
          },
          {
            "name": "use_service_window",
            "in": "query",
            "description": "Use a fall-back service date if the requested service_date is outside the active service period of the feed version. The fall-back date is selected as the matching day-of-week in the week which provides the best level of scheduled service in the feed version. This value defaults to true.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "use_service_window=false",
                "url": "/stops/f-sf~bay~area~rg:LAKE/departures?use_service_window=false"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Departures matching specified criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stop_departure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/routes/{route_key}/trips": {
      "x-alternates": [
        {
          "path": "/routes/{route_key}/trips.{format}",
          "description": "Request trips in specified format",
          "method": "get"
        },
        {
          "path": "/routes/{route_key}/trips/{id}",
          "description": "Request a single trip by ID",
          "method": "get"
        },
        {
          "path": "/routes/{route_key}/trips/{id}.format",
          "description": "Request a single trip by ID in specified format",
          "method": "get"
        }
      ],
      "get": {
        "summary": "Trips",
        "description": "Search for trips",
        "parameters": [
          {
            "$ref": "#/components/parameters/includeAlertsParam"
          },
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "in": "path",
            "required": true,
            "name": "route_key",
            "description": "Route lookup key; can be an integer ID, a '<feed onestop_id>:<gtfs route_id>' key, or a Onestop ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "$ref": "#/components/parameters/limitParam",
            "x-example-requests": [
              {
                "description": "limit=1",
                "url": "/routes/r-9q9j-l1/trips?limit=1"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/formatParam",
            "x-example-requests": [
              {
                "description": "format=geojson",
                "url": "/routes/r-9q9j-l1/trips?limit=10&format=geojson"
              }
            ]
          },
          {
            "in": "query",
            "name": "service_date",
            "description": "Search for trips active on this date",
            "example": "2021-06-21",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "x-example-requests": [
              {
                "description": "service_date=...",
                "url": "/routes/r-9q9j-l1/trips?service_date=2021-07-14"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/relativeDateParam",
            "x-example-requests": [
              {
                "description": "/routes/r-9q9j-l1/trips?relative_date=NEXT_MONDAY",
                "url": "/routes/r-9q9j-l1/trips?relative_date=NEXT_MONDAY"
              }
            ]
          },
          {
            "in": "query",
            "name": "trip_id",
            "description": "Search for records with this GTFS trip_id",
            "schema": {
              "type": "string"
            },
            "x-example-requests": [
              {
                "description": "trip_id=305",
                "url": "/routes/r-9q9j-l1/trips?trip_id=305"
              }
            ]
          },
          {
            "in": "query",
            "name": "include_geometry",
            "description": "Include shape geometry",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "include_geometry=true",
                "url": "/routes/r-9q9j-l1/trips?limit=10&include_geometry=true"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/sha1Param",
            "x-example-requests": [
              {
                "description": "feed_version_sha1=041ffeec...",
                "url": "/routes/r-9q9j-l1/trips?feed_version_sha1=041ffeec98316e560bc2b91960f7150ad329bd5f"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/feedParam",
            "x-example-requests": [
              {
                "description": "feed_onestop_id=f-sf~bay~area~rg",
                "url": "/routes/r-9q9j-l1/trips?feed_onestop_id=f-sf~bay~area~rg"
              }
            ]
          },
          {
            "name": "use_service_window",
            "in": "query",
            "description": "Use a fall-back service date if the requested service_date is outside the active service period of the feed version. The fall-back date is selected as the matching day-of-week in the week which provides the best level of scheduled service in the feed version. This value defaults to true.",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "x-example-requests": [
              {
                "description": "use_service_window=false",
                "url": "/routes/r-9q9j-l1/trips?use_service_window=false"
              }
            ]
          },
          {
            "$ref": "#/components/parameters/latParam"
          },
          {
            "$ref": "#/components/parameters/lonParam"
          },
          {
            "$ref": "#/components/parameters/licenseCommercialUseAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseShareAlikeOptionalParam"
          },
          {
            "$ref": "#/components/parameters/licenseCreateDerivedProductParam"
          },
          {
            "$ref": "#/components/parameters/licenseRedistributionAllowedParam"
          },
          {
            "$ref": "#/components/parameters/licenseUseWithoutAttributionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/trip"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stop_times": {
      "get": {
        "summary": "Stop times",
        "description": "Search for stop times",
        "parameters": [
          {
            "$ref": "#/components/parameters/idParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/afterParam"
          },
          {
            "in": "query",
            "name": "trip_id",
            "description": "Stop times with this internal trip ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "stop_id",
            "description": "Stop times with this internal stop ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/stop_time"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "includeAlertsParam": {
        "in": "query",
        "name": "include_alerts",
        "description": "Include alerts from GTFS Realtime feeds",
        "schema": {
          "default": "true",
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "licenseCommercialUseAllowedParam": {
        "in": "query",
        "name": "license_commercial_use_allowed",
        "description": "Filter entities by feed license 'commercial_use_allowed' value. Please see Source Feed concept for details on license values. 'exclude_no' is equivalent to 'yes' and 'unknown'.",
        "schema": {
          "enum": [
            "yes",
            "no",
            "unknown",
            "exclude_no"
          ]
        }
      },
      "licenseShareAlikeOptionalParam": {
        "in": "query",
        "name": "license_share_alike_optional",
        "description": "Filter entities by feed license 'share_alike_optional' value. Please see Source Feed concept for details on license values. 'exclude_no' is equivalent to 'yes' and 'unknown'.",
        "schema": {
          "enum": [
            "yes",
            "no",
            "unknown",
            "exclude_no"
          ]
        }
      },
      "licenseCreateDerivedProductParam": {
        "in": "query",
        "name": "license_create_derived_product",
        "description": "Filter entities by feed license 'create_derived_product' value. Please see Source Feed concept for details on license values. 'exclude_no' is equivalent to 'yes' and 'unknown'.",
        "schema": {
          "enum": [
            "yes",
            "no",
            "unknown",
            "exclude_no"
          ]
        }
      },
      "licenseRedistributionAllowedParam": {
        "in": "query",
        "name": "license_redistribution_allowed",
        "description": "Filter entities by feed license 'redistribution_allowed' value. Please see Source Feed concept for details on license values. 'exclude_no' is equivalent to 'yes' and 'unknown'.",
        "schema": {
          "enum": [
            "yes",
            "no",
            "unknown",
            "exclude_no"
          ]
        }
      },
      "licenseUseWithoutAttributionParam": {
        "in": "query",
        "name": "license_use_without_attribution",
        "description": "Filter entities by feed license 'use_without_attribution' value. Please see Source Feed concept for details on license values. 'exclude_no' is equivalent to 'yes' and 'unknown'.",
        "schema": {
          "enum": [
            "yes",
            "no",
            "unknown",
            "exclude_no"
          ]
        }
      },
      "relativeDateParam": {
        "in": "query",
        "name": "relative_date",
        "description": "Search for departures on a relative date label, e.g. TODAY, TUESDAY, NEXT_WEDNESDAY",
        "schema": {
          "type": "string",
          "enum": [
            "TODAY",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY",
            "NEXT_MONDAY",
            "NEXT_TUESDAY",
            "NEXT_WEDNESDAY",
            "NEXT_THURSDAY",
            "NEXT_FRIDAY",
            "NEXT_SATURDAY",
            "NEXT_SUNDAY"
          ]
        }
      },
      "latParam": {
        "in": "query",
        "name": "lat",
        "description": "Latitude",
        "schema": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        }
      },
      "lonParam": {
        "in": "query",
        "name": "lon",
        "description": "Longitude",
        "schema": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        }
      },
      "radiusParam": {
        "in": "query",
        "name": "radius",
        "description": "Search radius (meters); requires lat and lon",
        "schema": {
          "type": "number",
          "minimum": 0,
          "maximum": 10000
        }
      },
      "bboxParam": {
        "in": "query",
        "name": "bbox",
        "description": "Geographic search using a bounding box, with coordinates in (min_lon, min_lat, max_lon, max_lat) order as a comma separated string",
        "schema": {
          "type": "string"
        }
      },
      "searchParam": {
        "in": "query",
        "name": "search",
        "description": "Full text search",
        "schema": {
          "type": "string"
        }
      },
      "formatParam": {
        "in": "query",
        "name": "format",
        "description": "Response format",
        "schema": {
          "enum": [
            "json",
            "geojson",
            "geojsonl",
            "png"
          ]
        }
      },
      "onestopParam": {
        "in": "query",
        "name": "onestop_id",
        "description": "Search for a specific Onestop ID",
        "schema": {
          "type": "string"
        }
      },
      "idParam": {
        "in": "query",
        "name": "id",
        "description": "Search for a specific internal ID",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      },
      "limitParam": {
        "in": "query",
        "name": "limit",
        "description": "Maximum number of records to return",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100,
          "default": 1
        }
      },
      "afterParam": {
        "in": "query",
        "name": "after",
        "description": "Pagination cursor value. This should be treated as an opaque value created by the server and returned as the link to the next result page, which may be empty. For historical reasons, this is based on the integer record ID values, but that should not be assumed to be the case in the future.",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "sha1Param": {
        "in": "query",
        "name": "feed_version_sha1",
        "description": "Search for records in this feed version",
        "schema": {
          "type": "string"
        }
      },
      "feedParam": {
        "in": "query",
        "name": "feed_onestop_id",
        "description": "Search for records in this feed",
        "schema": {
          "type": "string"
        }
      },
      "adm0NameParam": {
        "in": "query",
        "name": "adm0_name",
        "description": "Search by country name",
        "schema": {
          "type": "string"
        }
      },
      "adm0IsoParam": {
        "in": "query",
        "name": "adm0_iso",
        "description": "Search by country 2 letter ISO 3166 code",
        "schema": {
          "type": "string"
        }
      },
      "adm1NameParam": {
        "in": "query",
        "name": "adm1_name",
        "description": "Search by state/province/division name",
        "schema": {
          "type": "string"
        }
      },
      "adm1IsoParam": {
        "in": "query",
        "name": "adm1_iso",
        "description": "Search by state/province/division ISO 3166-2 code",
        "schema": {
          "type": "string"
        }
      },
      "cityNameParam": {
        "in": "query",
        "name": "city_name",
        "description": "Search by city name",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "id": {
        "type": "integer",
        "format": "int64",
        "nullable": false,
        "description": "Unique integer ID",
        "example": 123
      },
      "geometry": {
        "description": "Geometry in GeoJSON format",
        "externalDocs": {
          "description": "GeoJSON specification",
          "url": "https://tools.ietf.org/html/rfc7946"
        },
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "GeoJSON geometry type",
            "nullable": false
          },
          "coordinates": {
            "type": "array",
            "description": "An array of coordinates; may be nested arrays if geometry is Polygon or MultiLineString",
            "nullable": false,
            "items": {
              "type": "number"
            }
          }
        }
      },
      "feed_state": {
        "type": "object",
        "description": "Details on the current state of this feed, such as active version, last fetch time, etc.",
        "properties": {
          "last_fetch_error": {
            "type": "string",
            "description": "Error produced during the last fetch attempt. Empty string if no error.",
            "nullable": false,
            "example": "404 error"
          },
          "last_fetched_at": {
            "type": "string",
            "description": "Time of last attempted fetch",
            "format": "datetime",
            "example": "2019-11-15T00:45:55.409906"
          },
          "last_successful_fetch_at": {
            "type": "string",
            "description": "Time of last successful fetch that returned valid data",
            "format": "datetime",
            "example": "2019-11-15T00:45:55.409906"
          },
          "feed_version": {
            "type": "object",
            "$ref": "#/components/schemas/feed_version",
            "description": "The subset of fields of the active feed version. See feed version documentation for full details.",
            "nullable": false
          }
        }
      },
      "feed": {
        "description": "Distributed mobility data registry (DMFR) feed",
        "externalDocs": {
          "description": "DMFR Schema",
          "url": "https://dmfr.transit.land/json-schema/dmfr.schema.json"
        },
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this feed",
            "nullable": false,
            "example": "f-c20-trimet"
          },
          "name": {
            "type": "string",
            "description": "A common name for this feed",
            "example": "TriMet"
          },
          "spec": {
            "type": "string",
            "description": "Type of data contained in this feed: GTFS, GTFS-RT, GBFS, or MDS",
            "nullable": false,
            "enum": [
              "gtfs",
              "gtfs-rt",
              "gbfs",
              "mds"
            ]
          },
          "languages": {
            "type": "array",
            "nullable": false,
            "description": "Language(s) included in this feed",
            "example": [
              "en-US"
            ],
            "items": {
              "type": "string"
            }
          },
          "feed_versions": {
            "nullable": false,
            "type": "array",
            "description": "A subset of fields for the feed versions associated with this feed",
            "items": {
              "$ref": "#/components/schemas/feed_version"
            }
          },
          "urls": {
            "type": "object",
            "nullable": false,
            "description": "URLs that provide data associated with this feed",
            "properties": {
              "static_current": {
                "description": "URL for the static feed that represents today's service",
                "type": "string",
                "example": "http://developer.trimet.org/schedule/gtfs.zip"
              },
              "static_historic": {
                "description": "URLs for static feeds that represent past service that is no longer in effect",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "static_planned": {
                "description": "URLs for static feeds that represent service planned for upcoming dates. Typically used to represent calendar/service changes that will take effect few weeks or months in the future",
                "type": "string"
              },
              "realtime_vehicle_positions": {
                "type": "string",
                "description": "URL for GTFS Realtime VehiclePosition messages"
              },
              "realtime_trip_updates": {
                "type": "string",
                "description": "URL for GTFS Realtime TripUpdate messages"
              },
              "realtime_alerts": {
                "type": "string",
                "description": "URL for GTFS Realtime Alert messages"
              },
              "gbfs_auto_discovery": {
                "type": "string",
                "description": "URL for GBFS auto discovery"
              },
              "mds_provider": {
                "type": "string",
                "description": "URL for MDS endpoint"
              }
            }
          },
          "license": {
            "type": "object",
            "description": "License information for this feed, if present",
            "nullable": false,
            "properties": {
              "spdx_identifier": {
                "type": "string",
                "description": "SPDX identifier for a common license. See https://spdx.org/licenses/",
                "example": "CC-BY-4.0"
              },
              "url": {
                "type": "string",
                "description": "URL for a custom license",
                "example": "http://www.actransit.org/data-terms-and-conditions/"
              },
              "use_without_attribution": {
                "type": "string",
                "description": "Are feed consumers allowed to use the feed contents without including attribution text in their app or map?",
                "enum": [
                  "yes",
                  "no",
                  "unknown"
                ]
              },
              "create_derived_product": {
                "type": "string",
                "description": "Are feed consumers allowed to create and share derived products from the feed?",
                "enum": [
                  "yes",
                  "no",
                  "unknown"
                ]
              },
              "redistribution_allowed": {
                "type": "string",
                "description": "Are feed consumers allowed to redistribute the feed in its entirety?",
                "enum": [
                  "yes",
                  "no",
                  "unknown"
                ]
              },
              "commercial_use_allowed": {
                "type": "string",
                "description": "Are feed consumers allowed to use the feed for commercial purposes?",
                "enum": [
                  "yes",
                  "no",
                  "unknown"
                ]
              },
              "share_alike_optional": {
                "type": "string",
                "description": "Are feed consumers allowed to keep their modifications of this feed private?",
                "enum": [
                  "yes",
                  "no",
                  "unknown"
                ]
              },
              "attribution_text": {
                "type": "string",
                "description": "Feed consumers must include this particular text when using this feed",
                "example": "data provided by 511.org"
              },
              "attribution_instructions": {
                "type": "string",
                "description": "Feed consumers must follow these instructions for how to provide attribution",
                "example": "You must acknowledge the source of the provided data..."
              }
            }
          },
          "auth": {
            "type": "object",
            "nullable": false,
            "description": "Details on how to construct an HTTP request to access a protected resource",
            "properties": {
              "type": {
                "type": "string",
                "description": "Method for inserting authorization secret into request",
                "enum": [
                  "header",
                  "basic_auth",
                  "query_param",
                  "path_segment"
                ]
              },
              "param_name": {
                "type": "string",
                "description": "When type=query_param, this specifies the name of the query parameter. When type=header, this specifies the name of the header."
              },
              "info_url": {
                "type": "string",
                "description": "Website to visit to sign up for an account"
              }
            }
          },
          "feed_state": {
            "expand": true,
            "nullable": false,
            "$ref": "#/components/schemas/feed_state"
          },
          "geometry": {
            "expand": true,
            "$ref": "#/components/schemas/geometry"
          }
        }
      },
      "feed_version": {
        "type": "object",
        "description": "Feed version record",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 hash of the zip file",
            "example": "ab5bdc8b6cedd06792d42186a9b542504c5eef9a",
            "nullable": false
          },
          "fetched_at": {
            "type": "string",
            "description": "Time when the file was fetched from the url",
            "format": "datetime",
            "nullable": false,
            "example": "2021-07-09T05:11:00Z"
          },
          "url": {
            "description": "URL used to fetch the file",
            "type": "string",
            "format": "datetime",
            "example": "2020-01-01T02:03:04.569789Z",
            "nullable": false
          },
          "earliest_calendar_date": {
            "type": "string",
            "format": "date",
            "description": "The earliest date with scheduled service",
            "example": "2020-01-01",
            "nullable": false
          },
          "latest_calendar_date": {
            "type": "string",
            "format": "date",
            "description": "The latest date with scheduled service",
            "example": "2020-12-31",
            "nullable": false
          },
          "feed": {
            "nullable": false,
            "type": "object",
            "description": "A subset of fields for the feed associated with this feed version",
            "$ref": "#/components/schemas/feed"
          },
          "files": {
            "nullable": false,
            "type": "array",
            "items": {
              "expand": true,
              "$ref": "#/components/schemas/feed_version_file_info"
            }
          },
          "feed_infos": {
            "nullable": false,
            "type": "array",
            "description": "Data from the feed version 'feed_info.txt' file",
            "items": {
              "expand": true,
              "$ref": "#/components/schemas/feed_info"
            }
          },
          "feed_version_gtfs_import": {
            "expand": true,
            "$ref": "#/components/schemas/feed_version_gtfs_import"
          },
          "geometry": {
            "expand": true,
            "$ref": "#/components/schemas/geometry"
          }
        }
      },
      "feed_version_gtfs_import": {
        "description": "Status report of feed version importing and processing",
        "type": "object",
        "properties": {
          "in_progress": {
            "type": "boolean",
            "description": "True if the feed is currently being imported",
            "nullable": false
          },
          "success": {
            "type": "boolean",
            "description": "True if the feed has been successfully imported",
            "nullable": false
          },
          "exception_log": {
            "type": "string",
            "description": "An error message returned from a failed feed import. An empty string if no error.",
            "nullable": false,
            "example": "no entities in required file routes.txt"
          },
          "warning_count": {
            "type": "object",
            "description": "The number of warnings generated per file, if any"
          },
          "skip_entity_error_count": {
            "type": "object",
            "description": "The number of entities skipped due to entity errors per file, if any"
          },
          "skip_entity_filter_count": {
            "type": "object",
            "description": "The number of entities skipped by a filter per file, if any"
          },
          "skip_entity_marked_count": {
            "type": "object",
            "description": "The number of entities skipped by a marker per file, if any"
          },
          "interpolated_stop_time_count": {
            "type": "integer",
            "description": "The number of stop_time records where an interpolated arrival or departure time was set during import"
          }
        }
      },
      "feed_version_service_level": {
        "type": "object",
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "The first date of this service level block (always a Monday)"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "The last date of this service level block (always Sunday)"
          },
          "monday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Mondays in this service block"
          },
          "tuesday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Tuesdays in this service block"
          },
          "wednesday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Wednesdays in this service block"
          },
          "thursday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Thursdays in this service block"
          },
          "friday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Fridays in this service block"
          },
          "saturday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Saturdays in this service block"
          },
          "sunday": {
            "type": "integer",
            "format": "int64",
            "description": "The number of seconds of service scheduled on the Sundays in this service block"
          },
          "route_id": {
            "type": "string",
            "description": "GTFS route_id for this service block. Null when the block is the feed aggregate"
          },
          "route_short_name": {
            "type": "string",
            "description": "GTFS route_short_name for the route"
          },
          "route_long_name": {
            "type": "string",
            "description": "GTFS route_long_name for the route"
          },
          "route_type": {
            "type": "integer",
            "description": "GTFS route_type for the route"
          },
          "agency_name": {
            "type": "string",
            "description": "GTFS agency_name for the agency associated with this route"
          }
        }
      },
      "feed_version_file_info": {
        "type": "object",
        "description": "Metadata for each text file present in the main directory of the zip archive",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name",
            "example": "stops.txt"
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 of this file",
            "example": "cfd72af293bf9f6939be20ad6890cb4c20f322b1"
          },
          "header": {
            "type": "string",
            "description": "Header row, as a comma-separated string. This value may be filtered and cleaned up from the source file",
            "example": "trip_id,stop_id,arrival_time,departure_time,stop_sequence"
          },
          "rows": {
            "type": "integer",
            "description": "Number of rows, not including header",
            "minimum": 0
          },
          "csv_like": {
            "type": "boolean",
            "description": "True if the file appears to be a valid CSV file"
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "File size, in bytes"
          }
        }
      },
      "route": {
        "type": "object",
        "description": "Route entity",
        "externalDocs": {
          "description": "GTFS specification for routes.txt",
          "url": "https://gtfs.org/reference/static/#routestxt"
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this route, if available",
            "example": "r-dr72-1"
          },
          "route_id": {
            "type": "string",
            "example": "orange",
            "description": "GTFS route_id",
            "nullable": false
          },
          "route_type": {
            "type": "integer",
            "example": 3,
            "description": "GTFS route_type",
            "minimum": 0,
            "nullable": false
          },
          "route_short_name": {
            "type": "string",
            "description": "GTFS route_short_name",
            "example": "Orange",
            "nullable": false
          },
          "route_long_name": {
            "type": "string",
            "description": "GTFS route_long_name",
            "example": "Richmond - Warm Springs",
            "nullable": false
          },
          "route_color": {
            "type": "string",
            "format": "color",
            "description": "GTFS route_color",
            "nullable": false,
            "example": "#ff00bb"
          },
          "route_text_color": {
            "type": "string",
            "format": "color",
            "description": "GTFS route_text_color",
            "example": "#000000",
            "nullable": false
          },
          "route_sort_order": {
            "type": "integer",
            "description": "GTFS route_sort_order"
          },
          "continuous_pickup": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_pickup"
          },
          "continuous_drop_off": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_drop_off"
          },
          "agency": {
            "$ref": "#/components/schemas/agency",
            "nullable": false,
            "description": "A subset of fields for this route's agency"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version",
            "nullable": false,
            "description": "A subset of fields for this route's feed version"
          },
          "route_stops": {
            "type": "array",
            "description": "An array of all stops visited by this route. This field is only populated when requesting a single route.",
            "items": {
              "type": "object",
              "properties": {
                "stop": {
                  "description": "A subset of fields for this stop visited by this route",
                  "$ref": "#/components/schemas/stop"
                }
              }
            }
          },
          "geometry": {
            "expand": true,
            "$ref": "#/components/schemas/geometry"
          }
        }
      },
      "stop": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for stops.txt",
          "url": "https://gtfs.org/reference/static/#stopstxt"
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this stop, if available",
            "example": "s-dr5ruvgnyk-madisonav~e69st"
          },
          "stop_id": {
            "type": "string",
            "description": "GTFS stop_id",
            "nullable": false,
            "example": "400029"
          },
          "stop_name": {
            "type": "string",
            "description": "GTFS stop_name",
            "nullable": false,
            "example": "MADISON AV/E 69 ST"
          },
          "stop_desc": {
            "type": "string",
            "description": "GTFS stop_desc",
            "nullable": false,
            "example": "Find this stop at the end of a long journey"
          },
          "stop_url": {
            "type": "string",
            "format": "uri",
            "description": "GTFS stop_url",
            "nullable": false
          },
          "stop_timezone": {
            "type": "string",
            "format": "timezone",
            "description": "GTFS stop_timezone, if overriding agency/route timezone",
            "nullable": false,
            "example": "America/Los_Angeles"
          },
          "stop_code": {
            "type": "string",
            "description": "GTFS stop_code",
            "nullable": false
          },
          "zone_id": {
            "type": "string",
            "description": "GTFS zone_id",
            "nullable": false
          },
          "wheelchair_boarding": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS wheelchair_boarding",
            "nullable": false
          },
          "location_type": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS location_type",
            "nullable": false
          },
          "platform_code": {
            "type": "string",
            "description": "GTFS platform_code"
          },
          "tts_stop_name": {
            "type": "string",
            "description": "GTFS tts_stop_name"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version",
            "nullable": false,
            "description": "A subset of the fields for this stop's feed version"
          },
          "parent": {
            "description": "A subset of fields for the parent station for this stop, if defined",
            "$ref": "#/components/schemas/stop",
            "nullable": true
          },
          "level": {
            "expand": true,
            "$ref": "#/components/schemas/level",
            "nullable": true
          },
          "route_stops": {
            "x-expand": true,
            "type": "array",
            "description": "Routes associated with this stop",
            "nullable": false,
            "items": {
              "properties": {
                "route": {
                  "description": "A subset of fields for the routes that visit this stop. This field is only populated when requesting a single stop.",
                  "$ref": "#/components/schemas/route"
                }
              }
            }
          },
          "geometry": {
            "expand": true,
            "$ref": "#/components/schemas/geometry",
            "nullable": false
          }
        }
      },
      "agency": {
        "type": "object",
        "description": "Agency entity",
        "externalDocs": {
          "description": "GTFS specification for agencies.txt",
          "url": "https://gtfs.org/reference/static/#agenciesstxt"
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this agency, if available",
            "example": "o-9q9-bart"
          },
          "agency_id": {
            "type": "string",
            "description": "GTFS agency_id",
            "example": "BART"
          },
          "agency_name": {
            "type": "string",
            "description": "GTFS agency_name",
            "example": "Bay Area Rapid Transit"
          },
          "agency_url": {
            "type": "string",
            "format": "uri",
            "description": "GTFS agency_url",
            "example": "http://www.bart.gov"
          },
          "agency_timezone": {
            "type": "string",
            "format": "timezone",
            "description": "GTFS agency_timezone",
            "example": "America/Los_Angeles"
          },
          "agency_lang": {
            "type": "string",
            "description": "GTFS agency_lang",
            "example": "en-US"
          },
          "agency_phone": {
            "type": "string",
            "description": "GTFS agency_phone",
            "example": "800-660-4287"
          },
          "agency_fare_url": {
            "type": "string",
            "format": "uri",
            "description": "GTFS agency_fare_url",
            "example": "http://www.caltrain.com/fares"
          },
          "agency_email": {
            "type": "string",
            "description": "GTFS agency_email",
            "example": "support@bart.gov"
          },
          "operator": {
            "type": "object",
            "description": "Subset of fields for operator, if matched",
            "$ref": "#/components/schemas/operator"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version",
            "description": "A subset of fields for the source feed version"
          },
          "routes": {
            "type": "array",
            "description": "A subset of fields for routes associated with this agency. This field is only populated when requesting a single agency.",
            "items": {
              "$ref": "#/components/schemas/route"
            }
          },
          "geometry": {
            "expand": true,
            "$ref": "#/components/schemas/geometry"
          },
          "places": {
            "type": "array",
            "description": "Array of places associated with this agency",
            "items": {
              "type": "object",
              "properties": {
                "city_name": {
                  "type": "string",
                  "description": "Best-matched city",
                  "example": "Oakland"
                },
                "adm1_name": {
                  "type": "string",
                  "description": "Best-matched state or province",
                  "example": "California"
                },
                "adm0_name": {
                  "type": "string",
                  "description": "Best-matched country",
                  "example": "United States of America"
                }
              }
            }
          }
        }
      },
      "operator": {
        "type": "object",
        "description": "Transitland operator record",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this operator",
            "example": "o-9q9-bart"
          },
          "name": {
            "type": "string",
            "description": "Operator name",
            "example": "Bay Area Rapid Transit"
          },
          "short_name": {
            "type": "string",
            "description": "Operator short name",
            "example": "BART"
          },
          "website": {
            "type": "string",
            "description": "Operator website",
            "example": "https://www.bart.gov"
          },
          "tags": {
            "type": "object",
            "description": "Operator tags"
          },
          "agencies": {
            "type": "array",
            "description": "Subset of fields for matching agencies",
            "items": {
              "$ref": "#/components/schemas/agency"
            }
          }
        }
      },
      "trip": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for trips.txt",
          "url": "https://gtfs.org/reference/static/#tripstxt"
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "trip_id": {
            "type": "string",
            "description": "GTFS trip_id",
            "example": "910746"
          },
          "trip_headsign": {
            "type": "string",
            "description": "GTFS trip_headsign",
            "example": "San Francisco International Airport"
          },
          "trip_short_name": {
            "type": "string",
            "description": "GTFS trip_short_name",
            "example": "SFO"
          },
          "direction_id": {
            "type": "integer",
            "description": "GTFS direction_id"
          },
          "block_id": {
            "type": "string",
            "description": "GTFS block_id",
            "example": "block_2818_wed"
          },
          "wheelchair_accessible": {
            "type": "integer",
            "description": "GTFS wheelchair_accessible"
          },
          "bikes_allowed": {
            "type": "integer",
            "description": "GTFS bikes_allowed"
          },
          "stop_pattern_id": {
            "type": "integer",
            "description": "Pattern of stops for this trip; values are unique within the feed version",
            "example": 9
          },
          "route": {
            "description": "A subset of fields for the route associated with this trip",
            "$ref": "#/components/schemas/route"
          },
          "feed_version": {
            "description": "A subset of fields for the feed version",
            "$ref": "#/components/schemas/feed_version"
          },
          "stop_times": {
            "x-expand": true,
            "type": "array",
            "items": {
              "expand": true,
              "$ref": "#/components/schemas/stop_time"
            }
          },
          "schedule_relationship": {
            "type": "string",
            "description": "Details on if the trip is from static GTFS, or with added/canceled/scheduled GTFS-RT TripUpdate data",
            "nullable": false,
            "enum": [
              "SCHEDULED",
              "ADDED",
              "UNSCHEDULED",
              "CANCELED",
              "STATIC"
            ]
          },
          "shape": {
            "expand": true,
            "$ref": "#/components/schemas/shape"
          },
          "calendar": {
            "expand": true,
            "$ref": "#/components/schemas/calendar"
          },
          "frequencies": {
            "type": "array",
            "items": {
              "expand": true,
              "$ref": "#/components/schemas/frequency"
            }
          }
        }
      },
      "stop_time": {
        "type": "object",
        "description": "GTFS stop_time entities, with some modifications",
        "externalDocs": {
          "description": "GTFS specification for trips.txt",
          "url": "https://gtfs.org/reference/static/#tripstxt"
        },
        "properties": {
          "arrival_time": {
            "type": "string",
            "format": "seconds",
            "description": "Arrival time",
            "example": "11:02:03"
          },
          "departure_time": {
            "type": "string",
            "format": "seconds",
            "description": "Departure time",
            "example": "11:04:05"
          },
          "stop_sequence": {
            "type": "integer",
            "description": "GTFS stop_sequence",
            "example": 1
          },
          "stop_headsign": {
            "type": "string",
            "description": "GTFS stop_headsign",
            "example": "South San Francisco"
          },
          "pickup_type": {
            "type": "integer",
            "description": "GTFS pickup_type"
          },
          "drop_off_type": {
            "type": "integer",
            "description": "GTFS drop_off_type"
          },
          "timepoint": {
            "type": "integer",
            "description": "GTFS timepoint"
          },
          "shape_dist_traveled": {
            "type": "number",
            "description": "GTFS shape_dist_traveled"
          },
          "continuous_pickup": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_pickup"
          },
          "continuous_drop_off": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_drop_off"
          },
          "interpolated": {
            "type": "integer",
            "description": "Non-zero if interpolated time values were set during import"
          },
          "stop": {
            "description": "A subset of fields for this stop",
            "$ref": "#/components/schemas/stop"
          }
        }
      },
      "stop_departure": {
        "type": "object",
        "description": "GTFS stop_time entities, with some modifications",
        "externalDocs": {
          "description": "GTFS specification for trips.txt",
          "url": "https://gtfs.org/reference/static/#tripstxt"
        },
        "properties": {
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "onestop_id": {
            "type": "string",
            "description": "Onestop ID for this stop, if available",
            "example": "s-dr5ruvgnyk-madisonav~e69st"
          },
          "stop_id": {
            "type": "string",
            "description": "GTFS stop_id",
            "nullable": false,
            "example": "400029"
          },
          "stop_name": {
            "type": "string",
            "description": "GTFS stop_name",
            "nullable": false,
            "example": "MADISON AV/E 69 ST"
          },
          "stop_desc": {
            "type": "string",
            "description": "GTFS stop_desc",
            "nullable": false,
            "example": "Find this stop at the end of a long journey"
          },
          "stop_url": {
            "type": "string",
            "format": "uri",
            "description": "GTFS stop_url",
            "nullable": false
          },
          "stop_timezone": {
            "type": "string",
            "format": "timezone",
            "description": "GTFS stop_timezone, if overriding agency/route timezone",
            "nullable": false,
            "example": "America/Los_Angeles"
          },
          "stop_code": {
            "type": "string",
            "description": "GTFS stop_code",
            "nullable": false
          },
          "zone_id": {
            "type": "string",
            "description": "GTFS zone_id",
            "nullable": false
          },
          "wheelchair_boarding": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS wheelchair_boarding",
            "nullable": false
          },
          "location_type": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS location_type",
            "nullable": false
          },
          "platform_code": {
            "type": "string",
            "description": "GTFS platform_code"
          },
          "tts_stop_name": {
            "type": "string",
            "description": "GTFS tts_stop_name"
          },
          "feed_version": {
            "description": "A subset of fields for the feed version",
            "$ref": "#/components/schemas/feed_version"
          },
          "departures": {
            "expand": true,
            "description": "Departures from this stop",
            "$ref": "#/components/schemas/departure"
          }
        }
      },
      "departure": {
        "type": "object",
        "description": "Stop departure",
        "properties": {
          "arrival_time": {
            "type": "string",
            "format": "seconds",
            "description": "Arrival time",
            "example": "10:02:03"
          },
          "departure_time": {
            "type": "string",
            "format": "seconds",
            "description": "Departure time",
            "example": "11:04:05"
          },
          "arrival": {
            "expand": true,
            "description": "Arrival details",
            "$ref": "#/components/schemas/stop_time_event"
          },
          "departure": {
            "expand": true,
            "description": "Departure details",
            "$ref": "#/components/schemas/stop_time_event"
          },
          "stop_sequence": {
            "type": "integer",
            "description": "GTFS stop_sequence",
            "example": 1
          },
          "stop_headsign": {
            "type": "string",
            "description": "GTFS stop_headsign",
            "example": "South San Francisco"
          },
          "pickup_type": {
            "type": "integer",
            "description": "GTFS pickup_type"
          },
          "drop_off_type": {
            "type": "integer",
            "description": "GTFS drop_off_type"
          },
          "timepoint": {
            "type": "integer",
            "description": "GTFS timepoint"
          },
          "shape_dist_traveled": {
            "type": "number",
            "description": "GTFS shape_dist_traveled"
          },
          "continuous_pickup": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_pickup"
          },
          "continuous_drop_off": {
            "type": "integer",
            "minimum": 0,
            "description": "GTFS continuous_drop_off"
          },
          "interpolated": {
            "type": "integer",
            "description": "Non-zero if interpolated time values were set during import"
          },
          "trip": {
            "description": "A subset of fields for the associated trip. See the trips documentation for details.",
            "$ref": "#/components/schemas/trip"
          },
          "service_date": {
            "type": "string",
            "description": "GTFS service date for this departure, as specified in calendar.txt and calendar_dates.txt"
          },
          "date": {
            "type": "string",
            "description": "Calendar date for this departure; this may differ from the service date, e.g. an after-midnight departure from the previous day."
          },
          "schedule_relationship": {
            "type": "string",
            "enum": [
              "SCHEDULED",
              "ADDED",
              "UNSCHEDULED",
              "CANCELED",
              "STATIC"
            ],
            "description": "A status flag for real-time information about this trip. If no real-time information is available, the value will be STATIC and the estimated arrival/departure times will be empty. A trip with real-time information available will be SCHEDULED; a canceled trip will be CANCELED, and an added trip that is not present in the static GTFS will be ADDED."
          }
        }
      },
      "stop_time_event": {
        "type": "object",
        "description": "Stop time arrival or departure",
        "properties": {
          "scheduled": {
            "type": "string",
            "description": "Scheduled local event time",
            "example": "10:00:00"
          },
          "scheduled_utc": {
            "type": "string",
            "description": "Scheduled local event time",
            "example": "2022-09-29T23:16:12Z"
          },
          "scheduled_local": {
            "type": "string",
            "description": "Scheduled local event time",
            "example": "2022-09-29T16:16:12-07:00"
          },
          "estimated": {
            "type": "string",
            "description": "Estimated local event time based on GTFS Realtime data",
            "example": "10:01:30"
          },
          "estimated_utc": {
            "type": "string",
            "description": "Estimated event time in absolute UTC",
            "example": "2022-09-29T23:16:12Z"
          },
          "estimated_local": {
            "type": "string",
            "description": "Estimated event time in local time",
            "example": "2022-09-29T16:16:12-07:00"
          },
          "estimated_delay": {
            "type": "integer",
            "description": "Estimated schedule delay, in seconds, based on either a timestamp or overall trip delay. This value can be set directly from a matching GTFS-RT StopTimeUpdate timestamp or delay value or set via an estimated overall trip delay. The value is capped at +/- 86,400 seconds (24 hours). Values larger than that are are likely erroneous and will be set to null.",
            "example": 15
          },
          "delay": {
            "type": "integer",
            "description": "Estimated schedule delay, in seconds. This value is set when there is a directly matching GTFS-RT StopTimeUpdate for this stop and passed through as-is. See GTFS Realtime documentation.",
            "example": 15
          },
          "uncertainty": {
            "type": "integer",
            "description": "Estimation uncertainty. This value is set when there is a directly matching GTFS-RT StopTimeUpdate for this stop and passed through as-is. See GTFS Realtime documentation.",
            "example": 30
          }
        }
      },
      "level": {
        "type": "object",
        "description": "GTFS level",
        "externalDocs": {
          "description": "GTFS specification for levels.txt",
          "url": "https://gtfs.org/reference/static/#levelstxt"
        },
        "properties": {
          "level_id": {
            "type": "string",
            "description": "GTFS level_id"
          },
          "level_name": {
            "type": "string",
            "description": "GTFS level_name"
          },
          "level_index": {
            "type": "integer",
            "description": "GTFS level_index"
          }
        }
      },
      "shape": {
        "type": "object",
        "description": "Shape for a trip",
        "externalDocs": {
          "description": "GTFS specification for shapes.txt",
          "url": "https://gtfs.org/reference/static/#shapestxt"
        },
        "properties": {
          "shape_id": {
            "type": "string",
            "description": "GTFS shape_id",
            "example": "910746_shp"
          },
          "generated": {
            "description": "True if this shape was generated from point-to-point stop locations",
            "type": "boolean"
          },
          "geometry": {
            "$ref": "#/components/schemas/geometry"
          }
        }
      },
      "calendar": {
        "type": "object",
        "description": "GTFS calendar and calendar_dates entities",
        "externalDocs": {
          "description": "GTFS specification for calendar.txt",
          "url": "https://gtfs.org/reference/static/#calendartxt"
        },
        "properties": {
          "service_id": {
            "type": "string",
            "description": "GTFS service_id",
            "example": "2021_03_22-DX-MVS-Weekday-01"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "description": "GTFS start_date",
            "example": "2021-03-22"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "description": "GTFS end_date",
            "example": "2021-06-04"
          },
          "added_dates": {
            "type": "array",
            "description": "An array of dates where service is added (exception_type=1)",
            "example": [
              "2021-05-02"
            ],
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "removed_dates": {
            "type": "array",
            "description": "An array of dates where service is added (exception_type=2)",
            "example": [
              "2021-04-02",
              "2021-04-05",
              "2021-04-06"
            ],
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "generated": {
            "type": "boolean",
            "description": "True if this calendar is generated to represent calendar_date entries"
          },
          "monday": {
            "type": "integer",
            "description": "GTFS monday; service scheduled if 1"
          },
          "tuesday": {
            "type": "integer",
            "description": "GTFS tuesday; service scheduled if 1"
          },
          "wednesday": {
            "type": "integer",
            "description": "GTFS wednesday; service scheduled if 1"
          },
          "thursday": {
            "type": "integer",
            "description": "GTFS thursday; service scheduled if 1"
          },
          "friday": {
            "type": "integer",
            "description": "GTFS friday; service scheduled if 1"
          },
          "saturday": {
            "type": "integer",
            "description": "GTFS saturday; service scheduled if 1"
          },
          "sunday": {
            "type": "integer",
            "description": "GTFS sunday; service scheduled if 1"
          }
        }
      },
      "frequency": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for frequencies.txt",
          "url": "https://gtfs.org/reference/static/#frequenciestxt"
        },
        "properties": {
          "start_time": {
            "description": "When this trip begins repeating, in seconds",
            "type": "integer",
            "format": "seconds",
            "example": 36000
          },
          "end_time": {
            "description": "When this trip stops repeating, in seconds",
            "type": "integer",
            "format": "seconds",
            "example": 72000
          },
          "headway_secs": {
            "type": "integer",
            "description": "GTFS headway_secs",
            "example": 900
          },
          "exact_times": {
            "description": "GTFS exact_times",
            "type": "integer"
          }
        }
      },
      "pathway": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for pathways.txt",
          "url": "https://gtfs.org/reference/static/#pathwaystxt"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "pathway_id": {
            "type": "string",
            "description": "GTFS pathway_id"
          },
          "pathway_mode": {
            "type": "integer",
            "description": "GTFS pathway_mode"
          },
          "is_bidirectional": {
            "type": "integer",
            "description": "GTFS is_bidirectional"
          },
          "length": {
            "type": "number",
            "description": "GTFS length"
          },
          "traversal_time": {
            "type": "integer",
            "description": "GTFS traversal_time"
          },
          "stair_count": {
            "type": "integer",
            "description": "GTFS stair_count"
          },
          "max_slope": {
            "type": "number",
            "description": "GTFS max_slope"
          },
          "min_width": {
            "type": "number",
            "description": "GTFS min_width"
          },
          "signposted_as": {
            "type": "string",
            "description": "GTFS signposted_as"
          },
          "reverse_signposted_as": {
            "type": "string",
            "description": "GTFS reverse_signposted_as"
          },
          "from_stop": {
            "$ref": "#/components/schemas/stop"
          },
          "to_stop": {
            "$ref": "#/components/schemas/stop"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version"
          }
        }
      },
      "transfer": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for transfers.txt",
          "url": "https://gtfs.org/reference/static/#transferstxt"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "transfer_type": {
            "type": "integer",
            "description": "GTFS transfer_type"
          },
          "min_transfer_time": {
            "type": "integer",
            "description": "GTFS min_transfer_time"
          },
          "from_stop": {
            "$ref": "#/components/schemas/stop"
          },
          "to_stop": {
            "$ref": "#/components/schemas/stop"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version"
          }
        }
      },
      "feed_info": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for feed_info.txt",
          "url": "https://gtfs.org/reference/static/#feed_infotxt"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "feed_publisher_name": {
            "type": "string",
            "description": "GTFS feed_publisher_name"
          },
          "feed_publisher_url": {
            "type": "string",
            "description": "GTFS feed_publisher_url"
          },
          "feed_contact_email": {
            "type": "string",
            "description": "GTFS feed_contact_email"
          },
          "feed_contact_url": {
            "type": "string",
            "description": "GTFS feed_contact_url"
          },
          "feed_lang": {
            "type": "string",
            "description": "GTFS feed_lang"
          },
          "default_lang": {
            "type": "string",
            "description": "GTFS default_lang"
          },
          "feed_start_date": {
            "type": "string",
            "description": "GTFS feed_start_date"
          },
          "feed_end_date": {
            "type": "string",
            "description": "GTFS feed_end_date"
          },
          "feed_version": {
            "type": "string",
            "description": "GTFS feed_version: a string optionally provided in feed_info.txt. Not necessarily a Transitland feed version entity."
          }
        }
      },
      "fare_rule": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for fare_rules.txt",
          "url": "https://gtfs.org/reference/static/#fare_rulestxt"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "origin_id": {
            "type": "string",
            "description": "GTFS origin_id"
          },
          "destination_id": {
            "type": "string",
            "description": "GTFS destination_id"
          },
          "contains_id": {
            "type": "string",
            "description": "GTFS contains_id"
          },
          "fare_attribute": {
            "$ref": "#/components/schemas/fare_attribute"
          },
          "route": {
            "$ref": "#/components/schemas/route"
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version"
          }
        }
      },
      "fare_attribute": {
        "type": "object",
        "externalDocs": {
          "description": "GTFS specification for fare_attributes.txt",
          "url": "https://gtfs.org/reference/static/#fare_attributestxt"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fare_id": {
            "type": "string",
            "description": "GTFS fare_id"
          },
          "price": {
            "type": "number",
            "description": "GTFS price"
          },
          "currency_type": {
            "type": "string",
            "description": "GTFS currency_type"
          },
          "payment_method": {
            "type": "integer",
            "description": "GTFS payment_method"
          },
          "transfer_duration": {
            "type": "integer",
            "description": "GTFS transfer_duration"
          },
          "transfers": {
            "type": "integer",
            "description": "GTFS transfers"
          },
          "agency": {
            "$ref": "#/components/schemas/agency"
          },
          "fare_rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fare_rule"
            }
          },
          "feed_version": {
            "$ref": "#/components/schemas/feed_version"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://transit.land/api/v2/rest"
    }
  ]
}