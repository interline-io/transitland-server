# Directions API

input DirectionRequest {
  to: WaypointInput!
  from: WaypointInput!
  mode: StepMode!
  depart_at: Time
}

input WaypointInput {
  lon: Float!
  lat: Float!
  name: String
}

type Waypoint {
  lon: Float!
  lat: Float!
  name: String
}

type Directions {
  # metadata
  success: Boolean!
  exception: String
  data_source: String
  # input
  origin: Waypoint
  destination: Waypoint
  # first itin summary
  duration: Duration
  distance: Distance
  start_time: Time
  end_time: Time
  # itineraries
  itineraries: [Itinerary!]
}

type Itinerary {
  duration: Duration!
  distance: Distance!
  start_time: Time!
  end_time: Time!
  from: Waypoint!
  to: Waypoint!
  legs: [Leg!]
}

type Leg {
  duration: Duration!
  distance: Distance!
  start_time: Time!
  end_time: Time!
  from: Waypoint
  to: Waypoint
  steps: [Step!]
  geometry: LineString!
}

type Step {
  duration: Duration!
  distance: Distance!
  start_time: Time!
  end_time: Time!
  to: Waypoint
  mode: StepMode!
  instruction: String!
  geometry_offset: Int!
}

type Distance {
  distance: Float!
  units: DistanceUnit!
}

type Duration {
  duration: Float!
  units: DurationUnit!
}

enum DurationUnit {
  SECONDS
}

enum DistanceUnit {
  KILOMETERS
  MILES
}

enum StepMode {
  WALK
  AUTO
  BICYCLE
  TRANSIT
  LINE
}
