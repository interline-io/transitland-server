# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - "schema/*.graphqls"

# Where should the generated server code go?
exec:
  filename: internal/generated/gqlout/generated.go
  package: gqlout

# Where should any generated models go?
model:
  filename: model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  package: resolvers
  filename_template: "{name}.gql.go"



# struct_fields_always_pointers: false
# resolvers_always_return_pointers: false
# omit_slice_element_pointers: false

autobind:
  - "github.com/interline-io/transitland-server/model"

models:
  String:
    model:
      - "github.com/99designs/gqlgen/graphql.String"
      - "github.com/interline-io/transitland-lib/tl/tt.String"
  Time:
    model:
      - "github.com/99designs/gqlgen/graphql.Time"
      - "github.com/interline-io/transitland-lib/tl/tt.Time"
  Int:
    model:
      - "github.com/99designs/gqlgen/graphql.Int"
      - "github.com/99designs/gqlgen/graphql.Int64"
      - "github.com/99designs/gqlgen/graphql.Int32"
      - "github.com/interline-io/transitland-lib/tl/tt.Int"
  Float:
    model:
      - "github.com/99designs/gqlgen/graphql.Float"
      - "github.com/interline-io/transitland-lib/tl/tt.Float"
  Boolean:
    model:     
      - "github.com/99designs/gqlgen/graphql.Boolean"
      - "github.com/interline-io/transitland-lib/tl/tt.Bool"      
  TimeInput:
    model: "github.com/interline-io/transitland-lib/tl/tt.Time"
  StringInput:
    model: "github.com/interline-io/transitland-lib/tl/tt.String"      
  IntInput:
    model: "github.com/interline-io/transitland-lib/tl/tt.Input"
  FloatInput:
    model: "github.com/interline-io/transitland-lib/tl/tt.Float"
  Bool:
    model: "github.com/interline-io/transitland-lib/tl/tt.Bool"
  Key:
    model: "github.com/interline-io/transitland-lib/tl/tt.Key"
  Strings:
    model: "github.com/interline-io/transitland-lib/tl/tt.Strings"
  Counts:
    model: "github.com/interline-io/transitland-lib/tl/tt.Counts"
  Tags:
    model: "github.com/interline-io/transitland-lib/tl/tt.Tags"
  Polygon:
    model: "github.com/interline-io/transitland-lib/tl/tt.Polygon"
  LineString:
    model: "github.com/interline-io/transitland-lib/tl/tt.LineString"
  Point:
    model: "github.com/interline-io/transitland-lib/tl/tt.Point"
  Seconds:
    model: "github.com/interline-io/transitland-lib/tl/tt.Seconds"
  Geometry:
    model: "github.com/interline-io/transitland-lib/tl/tt.Geometry"    
  Date:
    model: "github.com/interline-io/transitland-lib/tl/tt.Date"
  Map:
    model: "github.com/interline-io/transitland-lib/tl/tt.Map"
  Feed:
    fields:
      onestop_id:
        fieldName: FeedID
  # Force resolvers
  RouteStop:
    fields:
      route:
        resolver: true
      stop:
        resolver: true
      agency:
        resolver: true
  FeedVersionServiceWindow:
    extraFields:
      FeedVersionID:
        type: int
  RouteHeadway:
    fields:
      stop:
        resolver: true
      departures:
        resolver: true
        fieldName: DeparturesUnused
    extraFields:
      DepartureInts:
        type: "github.com/interline-io/transitland-lib/tl/tt.Ints"
        overrideTags: db:"departures"
      RouteID:
        type: int
      SelectedStopID:
        type: int
  RouteStopPattern:
    fields:
      trips:
        resolver: true
    extraFields:
      RouteID:
        type: int
  RouteGeometry:
    extraFields:
      RouteID:
        type: int
  AgencyPlace:
    extraFields:
      AgencyID:
        type: int
  RouteAttribute:
    extraFields:
      RouteID:
        type: int
  Segment:
    fields:
      segment_patterns:
        resolver: true
    extraFields:
      FeedVersionID:
        type: int
  SegmentPattern:
    fields:
      segment:
        resolver: true
      route:
        resolver: true
    extraFields:
      RouteID:
        type: int
      SegmentID:
        type: int
  Place:
    fields:
      count:
        resolver: true
      operators:
        resolver: true
    extraFields:
      AgencyIDs:
        type: "github.com/interline-io/transitland-lib/tl/tt.Ints"
        overrideTags: db:"agency_ids"
  StopExternalReference:
    fields:
      target_active_stop:
        resolver: true
  ValidationReport:
    extraFields:
      FeedVersionID:
        type: int
  ValidationReportErrorGroup:        
    extraFields:
      ID:
        type: int
      ValidationReportID:
        type: int
  ValidationReportError:
    extraFields:
      ID:
        type: int
      ValidationReportErrorGroupID:
        type: int
  CensusGeography:
    fields:
      values:
        resolver: true
    extraFields:
      MatchEntityID:
        type: int      
  CensusValue:
    extraFields:
      GeographyID:
        type: int
      TableID:
        type: int
  