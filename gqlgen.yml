# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - "schema/*.graphqls"

# Where should the generated server code go?
exec:
  filename: internal/generated/gqlout/generated.go
  package: gqlout

# Where should any generated models go?
model:
  filename: model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  package: resolvers
  filename_template: "{name}.gql.go"

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/interline-io/transitland-server/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  String:
    model:
      - "github.com/99designs/gqlgen/graphql.String"
      - "github.com/interline-io/transitland-lib/tl/tt.String"
  Counts:
    model: "github.com/interline-io/transitland-lib/tl/tt.Counts"
  Tags:
    model: "github.com/interline-io/transitland-lib/tl/tt.Tags"
  Polygon:
    model: "github.com/interline-io/transitland-lib/tl/tt.Polygon"
  LineString:
    model: "github.com/interline-io/transitland-lib/tl/tt.LineString"
  Point:
    model: "github.com/interline-io/transitland-lib/tl/tt.Point"
  Seconds:
    model: "github.com/interline-io/transitland-lib/tl/tt.WideTime"
  Geometry:
    model: "github.com/interline-io/transitland-lib/tl/tt.Geometry"    
  Date:
    model: 
      - "github.com/interline-io/transitland-lib/tl/tt.Date"      
  Time:
    model:
      - "github.com/99designs/gqlgen/graphql.Time"
      - "github.com/interline-io/transitland-lib/tl/tt.Time"
  ID:
    model:
      - "github.com/99designs/gqlgen/graphql.ID"
      - "github.com/99designs/gqlgen/graphql.Int"
      - "github.com/99designs/gqlgen/graphql.Int64"
      - "github.com/99designs/gqlgen/graphql.Int32"
  Int:
    model:
      - "github.com/99designs/gqlgen/graphql.Int"
      - "github.com/99designs/gqlgen/graphql.Int64"
      - "github.com/99designs/gqlgen/graphql.Int32"
      - "github.com/interline-io/transitland-lib/tl/tt.Int"
  Float:
    model:
      - "github.com/99designs/gqlgen/graphql.Float"
      - "github.com/interline-io/transitland-lib/tl/tt.Float"
  Key:
    model: 
      - "github.com/interline-io/transitland-lib/tl/tt.Key"
  Boolean:
    model:     
      - "github.com/99designs/gqlgen/graphql.Boolean"
      - "github.com/interline-io/transitland-lib/tl/tt.Bool"      
  Bool:
    model:     
      - "github.com/interline-io/transitland-lib/tl/tt.Bool"
  Strings:
    model:     
      - "github.com/interline-io/transitland-lib/tl/tt.Strings"


